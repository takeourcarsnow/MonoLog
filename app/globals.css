@import url('https://fonts.googleapis.com/css2?family=Patrick+Hand:wght@400;700&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

/* --- MonoLog original CSS + variables (kept) --- */
:root {
  color-scheme: light dark;

  --bg: #ffffff;
  --bg-elev: #f7f7f9;
  --text: #0f0f10;
  --muted: #6b7280;
  --primary: #2563eb;
  --primary-weak: #dbeafe;
  --accent: #22c55e;
  --danger: #ef4444;
  --border: #e5e7eb;
  --shadow: 0 8px 28px rgba(0,0,0,.08);

  --radius: 14px;
  --radius-sm: 10px;
  --radius-lg: 18px;

  --transition-fast: 160ms ease;
  --transition-mid: 260ms cubic-bezier(.2,.7,.2,1);
  --maxw: 800px;

  /* toggle indicator color (light default) */
  --auth-toggle-indicator: rgba(0,0,0,0.06);

  --safe-top: env(safe-area-inset-top);
  --safe-bottom: env(safe-area-inset-bottom);
}

/* Prefer the user's OS preference only when no explicit saved preference exists - handled in JS init */
:root[data-theme="dark"] {
  --bg: #0c0c0e;
  --bg-elev: #141418;
  --text: #f7f7f7;
  --muted: #9ca3af;
  --primary: #60a5fa;
  --primary-weak: #0b2547;
  --accent: #34d399;
  --danger: #f87171;
  --border: #1f2937;
  --shadow: 0 8px 30px rgba(0,0,0,.35);
  /* darker theme toggle indicator */
  --auth-toggle-indicator: rgba(255,255,255,0.04);
}
:root[data-theme="light"] {
  --bg: #ffffff;
  --bg-elev: #f7f7f9;
  --text: #0f0f10;
  --muted: #6b7280;
  --primary: #2563eb;
  --primary-weak: #dbeafe;
  --accent: #22c55e;
  --danger: #ef4444;
  --border: #e5e7eb;
  --shadow: 0 8px 28px rgba(0,0,0,.08);
  --auth-toggle-indicator: rgba(0,0,0,0.06);
}

/* support projects that toggle dark mode by adding a `dark` class to the html element */
.dark {
  --auth-toggle-indicator: rgba(255,255,255,0.04);
}

* { box-sizing: border-box; }
/* Prevent any accidental horizontal overflow (fixes unwanted horizontal scrollbar on desktop) */
html, body { height: 100%; overflow-x: hidden; overscroll-behavior-x: none; }
body {
  margin: 0; background: var(--bg); color: var(--text);
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  line-height: 1.45;
}

a { color: inherit; text-decoration: none; }
img { max-width: 100%; height: auto; display: block; image-orientation: from-image; }

/* Skip link */
.skip-link {
  position: absolute;
  left: -9999px;
  top: 0;
  background: var(--primary);
  color: white;
  padding: 10px 14px;
  border-radius: 999px;
  z-index: 9999;
}
.skip-link:focus {
  left: 12px;
  top: 8px;
  outline: none;
}

:focus-visible {
  outline: 2px solid color-mix(in srgb, var(--primary), transparent 60%);
  outline-offset: 2px;
  border-radius: 8px;
}

#app-root {
  min-height: 100dvh;
}

.app-content {
  display: grid;
  grid-template-rows: auto 1fr;
}

.header {
  position: sticky; top: 0; z-index: 10;
  backdrop-filter: saturate(180%) blur(8px);
  background: color-mix(in srgb, var(--bg), transparent 10%);
  border-bottom: 1px solid var(--border);
  padding-top: var(--safe-top);
}
.header-inner {
  max-width: var(--maxw); margin: 0 auto; padding: 12px 16px;
  display: flex; align-items: center; gap: 10px; justify-content: space-between;
}
.brand { display: flex; align-items: center; gap: 10px; cursor: pointer; }
.brand .logo {
  width: 28px; height: 28px; border-radius: 8px; background: var(--text); position: relative; overflow: hidden;
}
.brand .logo::after {
  content: ""; position: absolute; inset: 6px; border-radius: 50%; background: var(--bg);
}
.brand h1 { font-size: 17px; font-weight: 700; margin: 0; letter-spacing: 0.2px; }

.header-actions { display: flex; align-items: center; gap: 8px; }

.btn {
  appearance: none; border: 1px solid var(--border); background: var(--bg-elev);
  color: var(--text); padding: 8px 12px; border-radius: 999px;
  font-size: 14px; line-height: 1; cursor: pointer;
  transition: transform var(--transition-fast), background var(--transition-fast), border-color var(--transition-fast), color var(--transition-fast);
}
.btn:hover { transform: translateY(-1px); }
.btn.primary { background: var(--primary); color: #fff; border-color: transparent; }
.btn.ghost { background: transparent; border-color: var(--border); }
.btn.icon { padding: 8px; width: 36px; height: 36px; display: grid; place-items: center; }

.content {
  max-width: var(--maxw);
  margin: 0 auto;
  width: 100%;
  padding: 12px 12px calc(76px + var(--safe-bottom));
}
.content { position: relative; /* allow certain header elements to overflow (e.g. avatar shadows) */ overflow: visible; }

/* Page slide: support swipe-to-navigate with smooth transforms. We keep
   a single .page-slide element and animate its transform/opacity on
   navigation or during pointer/touch drags. Respect prefers-reduced-motion
   by disabling translations for users who opt out. */
.content > .page-slide {
  position: relative;
  will-change: transform, opacity;
  transition: transform .26s var(--transition-mid), opacity .26s var(--transition-mid);
  transform: translateX(0);
}

/* directional classes used by JS navigation (enter/exit states) */
.content.slide-left > .page-slide { transform: translateX(-100%); opacity: 0.92; }
.content.slide-right > .page-slide { transform: translateX(100%); opacity: 0.92; }
.content.slide-enter-left > .page-slide { transform: translateX(100%); }
.content.slide-enter-right > .page-slide { transform: translateX(-100%); }

@media (prefers-reduced-motion: reduce) {
  .content > .page-slide { transition: opacity 120ms linear; transform: none !important; }
}

.tabbar {
  position: fixed; bottom: 0; left: 0; right: 0;
  /* Raise z-index above editor/portal overlays (these use up to 99999) so the
     navigation bar remains the top-most interactive element. */
  z-index: 100001;
  background: color-mix(in srgb, var(--bg), transparent 6%);
  border-top: 1px solid var(--border);
  backdrop-filter: blur(8px);
  padding-bottom: var(--safe-bottom);
}
.tabbar-inner {
  max-width: var(--maxw);
  margin: 0 auto; padding: 6px 8px; /* tighter padding */
    display: grid; grid-template-columns: repeat(5, 1fr); gap: 8px; /* 5 columns so Post sits center */
}
.tab-item {
  display: flex; flex-direction: column; align-items: center; justify-content: center; gap: 4px;
  color: var(--muted); font-size: 12px; padding: 4px 2px;
}
.tab-item span { line-height: 1; }
.tab-item[aria-current="page"] { color: var(--text); font-weight: 700; }
.tab-item .ic {
  width: 38px; height: 38px; border-radius: 999px; display: grid; place-items: center;
  transition: transform var(--transition-fast), color var(--transition-fast);
  position: relative; z-index: 2; /* sit above the moving indicator */
}
.tab-item[aria-current="page"] .ic {
  transform: translateY(-6px); /* slightly lift the icon when active */
  color: white;
}
/* Improve contrast for icons (including emoji or image-based icons).
   - add a subtle drop shadow to all icons so they read against both light and colored backgrounds
   - for active icons (on the colored indicator) add a light halo/text-shadow to increase perceived contrast
   - slightly scale the active icon for a clearer visual cue */
.tab-item .ic,
.tab-item .ic img,
.tab-item .ic svg {
  filter: drop-shadow(0 2px 6px rgba(0,0,0,0.08));
  -webkit-font-smoothing: antialiased;
}
.tab-item[aria-current="page"] .ic {
  transform: translateY(-6px) scale(1.06);
  color: white;
  text-shadow: 0 1px 0 rgba(255,255,255,0.9), 0 2px 8px rgba(0,0,0,0.12);
}
.tab-item[aria-current="page"] .ic img,
.tab-item[aria-current="page"] .ic svg {
  /* further lift image/svg icons visually above the indicator */
  filter: drop-shadow(0 6px 20px rgba(0,0,0,0.12));
}

/* make the active label smaller and centered under the raised icon */
.tab-item[aria-current="page"] {
  padding-top: 2px; /* reduce top padding so label sits closer to icon */
}

/* extra breathing room so raised icon doesn't overlap the border */
.tabbar { padding-top: 8px; }

/* Moving indicator for bottom nav: sits behind active tab and animates between positions */
.tabbar-inner { position: relative; }
/* Circular sliding indicator that moves behind icons. Positioned using left
   and a CSS variable for top so it can sit under the icon row. */
.tab-indicator {
  position: absolute;
  left: 0;
  top: var(--indicator-top, 6px);
  width: 44px; height: 44px; border-radius: 999px;
  background: var(--primary);
  box-shadow: 0 12px 30px rgba(37,99,235,0.12);
  pointer-events: none;
  transform-origin: center;
  opacity: 0;
  transition: left 260ms var(--transition-mid), width 260ms var(--transition-mid), opacity 160ms var(--transition-fast), transform 220ms cubic-bezier(.2,.7,.2,1);
  z-index: 1; /* behind icons (icons have z-index:2) */
}
.tab-indicator.visible { opacity: 1; }
.tab-indicator.pop { transform: translateY(-4px) scale(1.02); }

/* soft center highlight in the indicator to raise icon contrast (very subtle) */
.tab-indicator::after {
  content: "";
  position: absolute;
  left: 50%; top: 50%; transform: translate(-50%, -50%);
  width: 28px; height: 28px; border-radius: 999px;
  background: rgba(255,255,255,0.06);
  filter: blur(6px);
  pointer-events: none;
}

/* when user prefers reduced motion, use a simple fade without translate/scale */
@media (prefers-reduced-motion: reduce) {
  .tab-indicator { transition: opacity 120ms linear; transform: none !important; }
}

.feed {
  display: grid;
  gap: 14px;
  /* center feed/explore content to match the app's main max width */
  max-width: var(--maxw);
  margin: 0 auto;
  width: 100%;
  box-sizing: border-box;
  /* keep a small horizontal padding so full-bleed slides don't touch the edges */
  padding: 0 12px;
}
.card {
  background: var(--bg-elev); border: 1px solid var(--border); border-radius: var(--radius);
  box-shadow: var(--shadow); overflow: hidden;
  transform: translateY(4px); opacity: 0; animation: in 460ms var(--transition-mid) forwards;
  transition: transform var(--transition-fast), box-shadow var(--transition-fast), border-color var(--transition-fast);

  width: 100%;
  max-width: 100%;
  min-width: 0;
}
@keyframes in {
  to { transform: translateY(0); opacity: 1; }
}
.view-fade { 
  animation: viewFade 280ms var(--transition-mid) both;
}
@keyframes viewFade { from { opacity: 0; transform: translateY(6px); } to { opacity: 1; transform: translateY(0); } }

.comment-item.new { animation: commentIn 360ms cubic-bezier(.2,.8,.2,1); }
@keyframes commentIn { from { opacity: 0; transform: translateY(6px) scale(.99); } to { opacity: 1; transform: translateY(0) scale(1); } }

.btn { transition: transform 160ms ease, background 160ms ease, box-shadow 160ms ease; }
.btn:active { transform: translateY(1px) scale(.997); }

.follow-btn.pulse { animation: pulse 420ms ease; }
@keyframes pulse { 0% { transform: scale(.98); } 50% { transform: scale(1.04); } 100% { transform: scale(1); } }
.card-head {
  display: flex; align-items: center; gap: 10px; padding: 10px 12px; border-bottom: 1px solid var(--border);
  background: color-mix(in srgb, var(--bg-elev), transparent 10%);
}

/* Subtle, card-scoped button micro-interactions (used on About and other card actions) */
.card .btn {
  transition: transform 160ms var(--transition-mid), box-shadow 200ms var(--transition-mid), background 140ms ease;
  padding: 10px 14px; /* slightly larger touch target inside cards */
}
.card .btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 22px rgba(0,0,0,0.06);
}
.card .btn.primary:hover {
  box-shadow: 0 10px 28px rgba(37,99,235,0.10), 0 1px 4px rgba(0,0,0,0.04) inset;
}
.card .btn:focus {
  outline: none;
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--primary), transparent 88%), 0 6px 18px rgba(0,0,0,0.06);
  transform: translateY(-1px);
}
.card .btn:active {
  transform: translateY(1px) scale(.997);
  box-shadow: 0 6px 16px rgba(0,0,0,0.05);
}

/* Icon reveal buttons: show a small icon and gently reveal the text on hover/focus */
.icon-reveal { display: inline-flex; align-items: center; gap: 8px; overflow: hidden; }
.icon-reveal .icon { display: inline-grid; place-items: center; width: 18px; height: 18px; transition: transform 220ms var(--transition-mid), opacity 220ms var(--transition-fast); }
.icon-reveal .reveal { display: inline-block; transform-origin: left center; transition: transform 260ms var(--transition-mid), opacity 220ms var(--transition-fast); opacity: 1; }

/* default: slightly hide the reveal label on compact buttons to emphasize the icon */
.icon-reveal:not(.primary) .reveal { transform: translateX(-6px) scale(0.98); opacity: 0.9; }

.icon-reveal:hover .icon,
.icon-reveal:focus .icon { transform: translateY(-3px) scale(1.06); }
.icon-reveal:hover .reveal,
.icon-reveal:focus .reveal { transform: translateX(0) scale(1); opacity: 1; }

/* make primary buttons slightly more pronounced */
.btn.primary.icon-reveal .reveal { font-weight: 700; }

/* keep motion minimal for users who prefer reduced motion */
@media (prefers-reduced-motion: reduce) {
  .icon-reveal .icon, .icon-reveal .reveal, .icon-reveal:hover .icon, .icon-reveal:focus .icon, .icon-reveal:hover .reveal, .icon-reveal:focus .reveal { transition: none !important; transform: none !important; }
}

/* Respect prefers-reduced-motion */
@media (prefers-reduced-motion: reduce) {
  .card .btn, .card .btn:hover, .card .btn:focus { transition: none; transform: none; box-shadow: none; }
}
.avatar { width: 30px; height: 30px; border-radius: 50%; object-fit: cover; }
.user-line { display: flex; align-items: center; gap: 6px; }
.username { font-weight: 700; font-size: 14px; }
.dim { color: var(--muted); font-size: 12px; }

.card-media img {
  width: 100%; height: auto; display: block;
  background: #00000008; opacity: 0; transition: opacity 220ms ease;
}
.card-media img.loaded { opacity: 1; }

.card-media {
  background: #00000006;
  overflow: hidden;
  max-width: 100%;
  /* center media (single images) horizontally inside the card */
  display: flex;
  align-items: center;
  justify-content: center;
}
.card-media img {
  /* let images use their intrinsic width up to the card width, and center */
  width: auto;
  max-width: 100%;
  height: auto;
  object-fit: contain;
  display: block;
  margin: 0 auto;
  background: var(--bg);
}

/* Subtle frame for photos in feed / explore
   - uses an inset 1px ring to emulate a photo frame without changing layout
   - applies to single images, carousel slides, and grid tiles
*/
.card-media img,
.carousel-slide img,
.grid .tile img {
  border-radius: 10px;
  background-clip: padding-box; /* keep the inset ring sharp */
  box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--border), transparent 58%), 0 8px 20px rgba(0,0,0,0.04);
  transition: box-shadow var(--transition-fast), transform var(--transition-fast);
}

/* Slightly emphasize the frame on hover/focus for affordance without being loud */
.card:hover .card-media img,
.card-media:hover img,
.grid .tile:hover img,
.carousel-slide img:hover {
  box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--border), transparent 40%), 0 12px 30px rgba(0,0,0,0.06);
}

/* Carousel: horizontally scrollable set of images for posts with multiple images */
.card-media .carousel {
  display: flex; gap: 8px; overflow-x: auto; scroll-snap-type: x mandatory; -webkit-overflow-scrolling: touch;
}
.card-media .carousel img {
  flex: 0 0 100%; scroll-snap-align: center; width: 100%; height: auto; object-fit: contain; display: block;
}

/* Controlled transform-based carousel for posts (better UX than free horizontal scroll) */
.carousel-wrapper { position: relative; overflow: hidden; }
.carousel-wrapper { touch-action: pan-y; }
.carousel-track {
  display: flex; transition: transform 320ms cubic-bezier(.2,.8,.2,1); width: 100%; will-change: transform;
}
.carousel-slide { flex: 0 0 100%; display: flex; align-items: center; justify-content: center; }
.carousel-slide img { width: 100%; height: auto; object-fit: contain; display: block; }

/* arrows */
.carousel-arrow {
  position: absolute; top: 50%; transform: translateY(-50%); z-index: 10;
  background: color-mix(in srgb, var(--bg), transparent 60%); border: 1px solid var(--border);
  width: 38px; height: 38px; border-radius: 999px; display: grid; place-items: center; cursor: pointer;
  box-shadow: 0 8px 18px rgba(0,0,0,0.08); color: var(--text); font-size: 22px; line-height: 1;
  opacity: 0; pointer-events: none; transition: opacity 180ms var(--transition-fast), transform 180ms var(--transition-fast);
}
.carousel-arrow.left { left: 8px; }
.carousel-arrow.right { right: 8px; }
.carousel-arrow:hover { transform: translateY(-50%) scale(1.03); }

/* Edge hover areas: reveal arrows when user is hovering near the left/right edges */
.carousel-wrapper { position: relative; }
.carousel-wrapper:focus { outline: none; }
.edge-area {
  position: absolute; top: 0; bottom: 0; width: 14%; z-index: 5; background: transparent;
  /* don't block clicks on slide content (Edit button) */
  pointer-events: none;
}
.edge-area.left { left: 0; }
.edge-area.right { right: 0; }

/* When hovering the left/right edge, reveal the corresponding arrow */
.edge-area.left:hover ~ .carousel-track + .carousel-arrow.left,
.carousel-wrapper:hover .edge-area.left:hover ~ .carousel-track + .carousel-arrow.left {
  opacity: 1; pointer-events: auto;
}
.edge-area.right:hover ~ .carousel-track + .carousel-arrow.right,
.carousel-wrapper:hover .edge-area.right:hover ~ .carousel-track + .carousel-arrow.right {
  opacity: 1; pointer-events: auto;
}

/* Also reveal arrows when wrapper is focused (keyboard users) or hovered overall */
.carousel-wrapper:focus .carousel-arrow,
.carousel-wrapper:hover .carousel-arrow {
  opacity: 0.9; pointer-events: auto;
}

/* dots */
.carousel-dots { position: absolute; left: 50%; transform: translateX(-50%); bottom: 8px; display: flex; gap: 8px; z-index: 11; }
.carousel-dots .dot {
  width: 8px; height: 8px; border-radius: 999px; background: color-mix(in srgb, var(--bg-elev), transparent 40%); border: 1px solid var(--border); padding: 0; cursor: pointer;
}
.carousel-dots .dot.active { background: var(--primary); border-color: transparent; box-shadow: 0 6px 18px rgba(0,0,0,0.12); transform: scale(1.15); }

/* make arrows and dots smaller on small screens */
@media (max-width: 640px) {
  .carousel-arrow { width: 34px; height: 34px; font-size: 20px; }
  .carousel-dots .dot { width: 7px; height: 7px; }
}

/* Desktop: cap feed/explore card image height so single posts don't fill the
   whole viewport at normal browser zoom. Keeps images large but prevents the
   'zoomed in' feeling on wide screens. Mobile rules above remain unchanged. */
@media (min-width: 900px) {
  .card-media {
    /* allow the card to size to the image but not exceed viewport height */
    max-height: 64vh;
    display: block;
  }

  .card-media img,
  .card-media .carousel img,
  .carousel-slide img {
    /* respect image aspect ratio while constraining height */
    max-height: 64vh;
    max-width: 100%;
    width: auto;
    object-fit: contain;
    display: block;
    margin: 0 auto;
  }

  /* keep carousel slides vertically centered when images are constrained */
  .carousel-slide { align-items: center; justify-content: center; }
}

/* Make profile avatar a bit smaller on narrow screens so header actions fit */
@media (max-width: 640px) {
  .profile-avatar { width: 56px; height: 56px; border-radius: 12px; }
}

/* Uploader-specific carousel/thumbnail layout to avoid interfering with post card styles */
.uploader .preview-inner { display: flex; flex-direction: column; align-items: center; gap: 8px; }
.uploader .preview-inner .carousel { width: 100%; display: flex; gap: 8px; overflow-x: auto; scroll-snap-type: x mandatory; -webkit-overflow-scrolling: touch; }
.uploader .preview-inner .carousel > div { flex: 0 0 100%; scroll-snap-align: center; position: relative; }
.uploader .thumbs { display: flex; gap: 8px; margin-top: 8px; justify-content: center; align-items: center; }
.uploader .thumbs button { padding: 0; border-radius: 8px; overflow: hidden; border: 1px solid var(--border); }
.uploader .thumbs img { width: 72px; height: 72px; object-fit: cover; display: block; }

.card:hover {
  transform: translateY(0);
  box-shadow: 0 18px 44px rgba(0,0,0,0.12);
  border-color: color-mix(in srgb, var(--primary), transparent 84%);
}

.card:focus-within { outline: 2px solid color-mix(in srgb, var(--primary), transparent 70%); outline-offset: 4px; border-radius: 8px; }

.card-body { padding: 10px 12px; display: grid; gap: 10px; }
.caption {
  font-size: 15px;
  font-family: 'Patrick Hand', ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  line-height: 1.35;
}
.actions { display: flex; align-items: center; gap: 10px; }
.action {
  display: inline-flex; align-items: center; gap: 6px; color: var(--muted);
  font-size: 13px; cursor: pointer; padding: 6px 8px; border-radius: 8px;
  transition: background var(--transition-fast), color var(--transition-fast);
}
.action:hover { background: color-mix(in srgb, var(--primary-weak), transparent 70%); color: var(--text); }

/* Favorite (star) animation and color feedback */
.action.favorite { transition: transform 220ms var(--transition-mid), color 220ms var(--transition-mid); }
.action.favorite .star { display: inline-block; font-size: 16px; line-height: 1; transition: transform 220ms cubic-bezier(.2,.8,.2,1), color 220ms var(--transition-mid), text-shadow 220ms var(--transition-mid); color: color-mix(in srgb, var(--muted), transparent 20%); }
.action.favorite.active { color: var(--primary); }
.action.favorite.active .star { animation: starPop 420ms cubic-bezier(.2,.8,.2,1); color: var(--primary); text-shadow: 0 6px 18px rgba(37,99,235,0.18); }

@keyframes starPop {
  0% { transform: scale(0.9) rotate(-6deg); }
  40% { transform: scale(1.18) rotate(6deg); }
  70% { transform: scale(0.98) rotate(-2deg); }
  100% { transform: scale(1) rotate(0deg); }
}

/* Comments open/close animation */
.comments {
  overflow: hidden;
  max-height: 0;
  opacity: 0;
  transform: translateY(-6px);
  transition: max-height 200ms var(--transition-mid), opacity 180ms var(--transition-mid), transform 180ms var(--transition-mid);
}
.comments.open {
  opacity: 1;
  transform: translateY(0);
  /* large max-height to accommodate comment list; keeps transition smooth */
  max-height: 1200px;
}
.comments.closing {
  opacity: 0;
  transform: translateY(-6px);
  max-height: 0;
}

.comment-box { display: grid; grid-template-columns: 1fr auto; gap: 8px; }
.input {
  width: 100%; border: 1px solid var(--border); background: var(--bg);
  color: var(--text); padding: 10px 12px; border-radius: 10px; font-size: 14px;
}
.input:focus { outline: 2px solid color-mix(in srgb, var(--primary), transparent 60%); border-color: var(--primary); }
.bio-editor {
  width: 100%; border: 1px solid var(--border); background: var(--bg);
  color: var(--text); padding: 10px 12px; border-radius: 10px; font-size: 14px;
  /* prevent the user from manually resizing the textarea (we control sizing via grid/CSS) */
  resize: none;
  /* allow internal scrolling if content overflows the configured height */
  overflow: auto;
}
.input-wrapper { position: relative; }
.input-ghost-placeholder {
  position: absolute;
  left: 12px; right: 12px; top: 50%; transform: translateY(-50%);
  pointer-events: none; color: color-mix(in srgb, var(--muted), transparent 12%);
  font-size: 14px; line-height: 1; overflow: hidden; white-space: nowrap;
}
.input-ghost-placeholder { display: flex; align-items: center; gap: 6px; }
.input-ghost-placeholder .typewriter {
  display: inline-block; max-width: 100%; overflow: hidden; text-overflow: ellipsis;
  color: color-mix(in srgb, var(--muted), transparent 8%);
}
.input-ghost-placeholder .caret {
  color: color-mix(in srgb, var(--muted), transparent 12%);
  opacity: 0.95;
  animation: blinkCaret 900ms steps(1) infinite;
  font-weight: 700;
}

@keyframes blinkCaret {
  0%, 49% { opacity: 1; }
  50%, 100% { opacity: 0; }
}

@media (prefers-reduced-motion: reduce) {
  .input-ghost-placeholder .typewriter { animation: none; border-right: none; }
}
.comment-list { display: grid; gap: 6px; }
.comment-item { font-size: 14px; }
.comment-item .author { font-weight: 700; margin-right: 6px; }

.comment-list { display: grid; gap: 10px; }
.comment-item { display: flex; gap: 10px; align-items: flex-start; padding: 8px; border-radius: 10px; background: color-mix(in srgb, var(--bg-elev), transparent 6%); border: 1px solid var(--border); }
.comment-avatar { width: 36px; height: 36px; border-radius: 10px; object-fit: cover; flex: 0 0 36px; }
.comment-body { display: block; min-width: 0; }
.comment-head { display:flex; gap:8px; align-items:center; margin-bottom:4px; }
.comment-text { font-size: 14px; color: var(--text); }

.comment-box { display:flex; gap:8px; align-items:center; }
.comment-box .input { flex: 1 1 auto; border-radius: 999px; padding: 10px 14px; }
.comment-box .btn.primary { border-radius: 999px; padding: 8px 12px; }

.comment-badge { display:inline-grid; place-items:center; min-width:28px; height:28px; padding:6px; background:color-mix(in srgb, var(--bg-elev), transparent 20%); border-radius:8px; border:1px solid var(--border); color:var(--muted); }

.empty {
  padding: 32px 16px; text-align: center; color: var(--muted);
}

.uploader { display: grid; gap: 12px; }
.drop {
  border: 2px dashed var(--border);
  padding: 16px; border-radius: var(--radius); text-align: center; color: var(--muted);
  transition: border-color var(--transition-fast), background var(--transition-fast);
}
.drop.dragover { border-color: var(--primary); background: color-mix(in srgb, var(--primary-weak), transparent 70%); color: var(--text); }
.preview { overflow: hidden; border-radius: var(--radius); }
.preview img { max-width: 100%; width: auto; height: auto; display: block; margin: 0 auto; }

/* Enhanced uploader styles */
.drop { display: grid; place-items: center; min-height: 160px; cursor: pointer; }
.drop-inner { display: grid; place-items: center; gap: 6px; }
.drop-icon { width: 62px; height: 62px; border-radius: 18px; display: grid; place-items: center; font-weight: 700; color: var(--primary); background: color-mix(in srgb, var(--primary-weak), transparent 28%); border: 1px dashed color-mix(in srgb, var(--primary), transparent 70%); font-size: 28px; }
.drop-text { font-weight: 600; }

.preview { display: none; }
.preview img { max-width: 100%; max-height: 480px; width: auto; height: auto; object-fit: contain; display: block; background: var(--bg); }
.preview-inner { max-height: 480px; overflow: hidden; border-radius: 14px; border: 1px solid var(--border); display: flex; align-items: center; justify-content: center; }
.preview.editing { overflow: visible; }
.preview-inner.editing { overflow: visible; z-index: 70; position: relative; }

.image-editor { z-index: 80; position: relative; }
.preview:not(.hidden) { display: block; }

.form-row { display: flex; gap: 12px; align-items: center; justify-content: space-between; margin-top: 6px; }
.form-row .vis-label { display: flex; flex-direction: column; align-items: flex-start; gap: 6px; }
.visibility-select { padding: 8px 10px; border-radius: 8px; border: 1px solid var(--border); background: var(--bg); color: var(--text); }

/* Segmented visibility buttons (Public / Private) */
.form-row .vis-label .btn {
  border-radius: 999px;
  padding: 8px 14px;
  background: var(--bg-elev);
  border: 1px solid var(--border);
  color: var(--muted);
  box-shadow: none;
  transition: background var(--transition-fast), transform var(--transition-fast), box-shadow var(--transition-fast), color var(--transition-fast);
}
.form-row .vis-label .btn:hover {
  transform: translateY(-1px);
}
.form-row .vis-label .btn.active,
.form-row .vis-label .btn[aria-pressed="true"] {
  background: var(--primary);
  border-color: transparent;
  color: white;
  box-shadow: 0 12px 30px color-mix(in srgb, var(--primary), transparent 70%);
  transform: translateY(-6px);
}
.form-row .vis-label .btn:focus {
  outline: 3px solid color-mix(in srgb, var(--primary), transparent 64%);
  outline-offset: 4px;
}

/* Visibility icon and subtle animation */
.vis-icon { display: inline-grid; place-items: center; width: 18px; height: 18px; margin-right: 8px; position: relative; }
.vis-icon svg { position: absolute; top: 0; left: 0; width: 18px; height: 18px; color: currentColor; transition: opacity 180ms var(--transition-fast), transform 200ms var(--transition-fast); }
/* default: show open eye for Public, hide closed eye */
.form-row .vis-label button[data-type="public"] .vis-icon .eye-open { opacity: 1; transform: scale(1); }
.form-row .vis-label button[data-type="public"] .vis-icon .eye-closed { opacity: 0; transform: scale(0.92) rotate(-6deg); }
/* default: show closed eye for Private (muted) */
.form-row .vis-label button[data-type="private"] .vis-icon .eye-open { opacity: 0.42; transform: scale(0.98); }
.form-row .vis-label button[data-type="private"] .vis-icon .eye-closed { opacity: 0.9; transform: scale(1); }
/* when active, swap to the correct icon and apply subtle motion */
.form-row .vis-label button[data-type="public"][aria-pressed="true"] .vis-icon .eye-open {
  opacity: 1; transform: scale(1) rotate(0deg);
}
.form-row .vis-label button[data-type="public"][aria-pressed="true"] .vis-icon .eye-closed {
  opacity: 0; transform: scale(0.92) rotate(-6deg);
}

.form-row .vis-label button[data-type="private"][aria-pressed="true"] .vis-icon .eye-open {
  opacity: 0; transform: scale(0.92) rotate(6deg);
}
.form-row .vis-label button[data-type="private"][aria-pressed="true"] .vis-icon .eye-closed {
  opacity: 1; transform: scale(1) rotate(0deg);
}

/* active pill glow and lift */
.form-row .vis-label .btn.active {
  transform: translateY(-6px);
  color: #fff;
}
.form-row .vis-label .btn.active .vis-icon svg { color: #fff; }
.form-row .vis-label .btn.active::after {
  content: "";
  position: absolute;
  inset: -8px; /* expand behind the pill */
  border-radius: 999px;
  z-index: -1;
  background: radial-gradient(closest-side, color-mix(in srgb, var(--primary), transparent 40%), transparent 60%);
  filter: blur(10px);
  opacity: 0.95;
  transition: opacity 220ms var(--transition-fast), transform 220ms var(--transition-fast);
}

/* Public active pill: strong primary color */
.form-row .vis-label button[data-type="public"].active {
  background: var(--primary);
  border-color: transparent;
}

/* Private active pill: muted but still with visible accent */
.form-row .vis-label button[data-type="private"].active {
  background: linear-gradient(180deg, color-mix(in srgb, var(--bg-elev), rgba(255,255,255,0.02)), color-mix(in srgb, var(--primary), transparent 92%));
  border-color: transparent;
}

/* Improve Private pill contrast specifically in light theme so the white text/icon is readable */
:root[data-theme="light"] .form-row .vis-label button[data-type="private"].active {
  /* mix primary with the light background to produce a subtle blue pill with better contrast */
  background: color-mix(in srgb, var(--primary), var(--bg) 62%);
  border-color: transparent;
  box-shadow: 0 12px 30px rgba(37,99,235,0.10);
  color: #fff; /* ensure text is white */
}

/* Single toggle style for visibility (eye icon) */
/* ensure vis-toggle overrides base .btn styles when both are present */
.btn.vis-toggle,
.vis-toggle {
  /* use CSS vars so transitions are smooth between states */
  --vis-bg: var(--bg-elev);
  --vis-color: var(--text);
  --vis-glow: transparent;

  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 8px 12px;
  border-radius: 999px;
  background: var(--vis-bg) !important;
  border: 1px solid var(--border) !important;
  color: var(--vis-color) !important;
  position: relative;
  transition: background 360ms cubic-bezier(.2,.8,.2,1), color 260ms var(--transition-fast), box-shadow 360ms cubic-bezier(.2,.8,.2,1), transform 220ms var(--transition-fast);
}
.vis-toggle::after {
  /* subtle glow that fades between states */
  content: "";
  position: absolute;
  inset: -6px; border-radius: 999px; z-index: -1;
  background: var(--vis-glow);
  filter: blur(10px);
  opacity: 0; transition: opacity 320ms var(--transition-fast), background 320ms var(--transition-fast);
}
.vis-toggle .vis-icon { position: relative; width: 18px; height: 18px; display: inline-grid; place-items: center; }
.vis-toggle .vis-icon svg { position: absolute; top: 0; left: 0; width: 18px; height: 18px; transition: transform 320ms cubic-bezier(.2,.8,.2,1), opacity 260ms var(--transition-fast); }

.vis-toggle.public {
  /* Public: blue-ish pill (active visible state) */
  --vis-bg: color-mix(in srgb, var(--primary), var(--bg) 64%);
  --vis-color: #fff;
  --vis-glow: color-mix(in srgb, var(--primary), transparent 70%);
  transform: translateY(-3px);
  border-color: transparent;
  box-shadow: 0 10px 28px color-mix(in srgb, var(--primary), transparent 82%);
}
.vis-toggle.public .eye-open { opacity: 1; transform: translateY(0) scale(1); }
.vis-toggle.public .eye-closed { opacity: 0; transform: translateY(-6px) scale(0.92) rotate(-6deg); }

.vis-toggle.private {
  /* Private: dark-ish pill (hidden/private state) */
  --vis-bg: color-mix(in srgb, rgba(0,0,0,0.6), var(--bg) 36%);
  --vis-color: #fff;
  --vis-glow: transparent;
  transform: translateY(-1px);
  border-color: transparent;
  box-shadow: 0 6px 18px rgba(0,0,0,0.12);
}
.vis-toggle.private .eye-open { opacity: 0; transform: translateY(6px) scale(0.92); }
.vis-toggle.private .eye-closed { opacity: 1; transform: translateY(0) scale(1) rotate(0deg); }

/* focus state for accessibility */
.vis-toggle:focus { outline: 3px solid color-mix(in srgb, var(--primary), transparent 64%); outline-offset: 4px; }

/* subtle press feedback */
.vis-toggle:active { transform: translateY(-1px) scale(0.997); }

@media (prefers-reduced-motion: reduce) {
  .vis-toggle, .vis-toggle .vis-icon svg { transition: none !important; }
  .vis-toggle::after { transition: none !important; }
}

/* Improve contrast and affordance for the upload drop area on mobile */
.drop { transition: border-color var(--transition-fast), background var(--transition-fast), box-shadow var(--transition-fast), transform var(--transition-fast); }
.drop:hover { transform: translateY(-2px); box-shadow: 0 12px 36px rgba(0,0,0,0.08); }
.drop .drop-icon { transition: transform 220ms var(--transition-mid), box-shadow 220ms var(--transition-mid); }
.drop.dragover .drop-icon { transform: scale(1.06); box-shadow: 0 8px 28px rgba(0,0,0,0.12); }

/* make the drop icon circle more distinct on mobile and dark theme */
@media (max-width: 640px) {
  .drop { border-radius: 12px; }
  .drop .drop-icon { background: linear-gradient(180deg, color-mix(in srgb, var(--primary-weak), transparent 12%), color-mix(in srgb, var(--primary-weak), transparent 28%)); color: var(--primary); }
}

/* smaller label under buttons to emphasize primary action on mobile */
@media (max-width: 640px) {
  .form-row .vis-label .btn { padding: 10px 12px; }
}

.btn-group { display: flex; gap: 8px; align-items: center; }
.btn.primary { padding: 10px 14px; border-radius: 12px; font-weight: 700; }
.btn.ghost.replace { padding: 10px 12px; }

.hidden { display: none !important; }

/* Mobile: stack form row */
@media (max-width: 640px) {
  .form-row { flex-direction: column; align-items: stretch; }
  .btn-group { justify-content: stretch; }
  .visibility-select { width: 100%; }
}

/* Uploader-specific mobile improvements: avoid overlap with bottom tabbar, tighten dropzone and thumbnails */
@media (max-width: 640px) {
  /* give uploader extra bottom padding so buttons/inputs aren't hidden behind tabbar */
  .uploader { padding-bottom: calc(96px + var(--safe-bottom)); }

  /* slightly smaller drop area to fit mobile screens comfortably */
  .drop { min-height: 140px; padding: 12px; }
  .drop-icon { width: 44px; height: 44px; border-radius: 12px; font-size: 20px; }
  .drop-text { font-size: 14px; }

  /* reduce preview max height to keep controls visible and avoid large images pushing buttons off-screen */
  .preview-inner { max-height: 56vh; }
  .preview img { max-height: 52vh; }

  /* make thumbnail strip smaller and easier to tap */
  .uploader .thumbs img { width: 56px; height: 56px; }

  /* stack publish/replace buttons and make them full-width for easier tapping */
  .btn-group { display: flex; flex-direction: column; gap: 8px; }
  .btn-group .btn { width: 100%; display: inline-flex; justify-content: center; }

  /* center visibility controls under the caption input on small screens */
  .form-row .vis-label { align-items: center; width: 100%; }
  .form-row .vis-label [role="radiogroup"] { display: flex !important; justify-content: center; width: 100%; gap: 8px; }

  /* inputs stretch to full width and have comfortable spacing */
  .input { font-size: 15px; padding: 12px; }

  /* reduce carousel control sizes on small screens */
  .carousel-arrow { width: 34px; height: 34px; }
}

/* small helper: visually hidden but available to screen readers */
.sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0; }

/* Auth form styles (sign in / sign up popup) */
.auth-form {
  display: flex;
  flex-direction: column;
  gap: 10px;
  min-width: 260px;
}
.auth-toggle { display: flex; gap: 8px; }
.auth-toggle .btn { border-radius: 999px; padding: 6px 12px; }
.auth-toggle .btn.active { background: var(--bg); border: 1px solid color-mix(in srgb, var(--primary), transparent 70%); box-shadow: 0 6px 18px rgba(0,0,0,0.06); }

.auth-form .input {
  width: 100%;
  background: color-mix(in srgb, var(--bg-elev), transparent 8%);
  border: 1px solid var(--border);
  padding: 10px 12px;
  border-radius: 10px;
  color: var(--text);
}
.auth-form .input::placeholder { color: color-mix(in srgb, var(--muted), transparent 20%); }

.auth-actions { display: flex; gap: 8px; }
.auth-actions .btn { padding: 8px 12px; border-radius: 999px; }
.auth-actions .btn.ghost { background: transparent; border-color: var(--border); }

/* slightly tighter layout when displayed inside Account dropdown */
.card .auth-form { min-width: 220px; }

/* Toast notifications (used via ToastProvider/useToast) */
.toast {
  position: fixed;
  left: 50%;
  bottom: calc(72px + var(--safe-bottom));
  transform: translateX(-50%);
  background: color-mix(in srgb, var(--bg-elev), transparent 8%);
  color: var(--text);
  border: 1px solid var(--border);
  padding: 10px 14px;
  border-radius: 12px;
  box-shadow: 0 10px 30px rgba(0,0,0,0.18);
  z-index: 9999;
  font-weight: 600;
  animation: toastIn 260ms var(--transition-mid) both;
}

@keyframes toastIn {
  from { opacity: 0; transform: translateX(-50%) translateY(6px) scale(.995); }
  to { opacity: 1; transform: translateX(-50%) translateY(0) scale(1); }
}

.kbd { font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace; background: var(--bg-elev); border: 1px solid var(--border); padding: 2px 6px; border-radius: 6px; }

.calendar { 
  display: grid; 
  gap: 8px; 
  width: 100%; 
  box-sizing: border-box; 
  margin-bottom: 36px;
}
.calendar .header {
  display: flex; justify-content: space-between; align-items: center;
  border: none; background: transparent;
}
.calendar-weekdays {
  display: grid; grid-template-columns: repeat(7, 1fr); gap: 6px;
  font-size: 11px; color: var(--muted);
}
.calendar-grid {
  display: grid; grid-template-columns: repeat(7, 1fr); gap: 6px; width: 100%;
}
.day {
  border: 1px solid var(--border); border-radius: 10px; padding: 8px; min-height: 64px;
  display: grid; align-content: space-between; background: var(--bg-elev);
  transition: transform var(--transition-fast), border-color var(--transition-fast), background var(--transition-fast);
  min-width: 0;
}
.day:hover { transform: translateY(-2px); border-color: var(--primary); }
.day:focus { outline: 3px solid color-mix(in srgb, var(--primary), transparent 70%); outline-offset: 2px; }
.day .d { font-weight: 700; font-size: 13px; }
.day .count { font-size: 11px; color: var(--muted); }
.day.today { outline: 2px solid color-mix(in srgb, var(--accent), transparent 60%); }

/* make day a positioned container so we can add subtle indicators */
.day { position: relative; }

/* subtle indicator for days that include the current user's posts
   - keep the day's base appearance unchanged and add a small accent dot
     in the top-right so it's discoverable but not loud */
.day.mine::after {
  content: "";
  position: absolute;
  top: 8px;
  right: 8px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--accent);
  box-shadow: 0 2px 6px rgba(0,0,0,0.12);
  opacity: 0.96;
  pointer-events: none;
}

/* Legend styles used in the calendar header */
.calendar-legend .legend-dot {
  display: inline-block;
  width: 10px; height: 10px; border-radius: 50%; box-shadow: 0 2px 6px rgba(0,0,0,0.08);
}
.calendar-legend .legend-dot.post { background: var(--primary); }
.calendar-legend .legend-dot.mine { background: var(--accent); }

/* selected day styling */
.day.selected { border-color: var(--primary); box-shadow: 0 8px 20px rgba(0,0,0,0.08); background: color-mix(in srgb, var(--primary-weak), transparent 86%); }

/* make selected animation a gentle scale + ring so it's obvious without being loud */
.day.selected {
  transform: translateY(-4px) scale(1.01);
  transition: transform 240ms var(--transition-mid), box-shadow 220ms var(--transition-fast), border-color 220ms var(--transition-fast);
}

/* skeleton placeholder for stats loading */
.day.skeleton { background: linear-gradient(90deg, color-mix(in srgb, var(--bg-elev), transparent 80%), color-mix(in srgb, var(--bg-elev), transparent 60%)); color: transparent; }
.day.skeleton .dot, .day.skeleton .count { opacity: 0; }

/* Today badge: small rounded pill near the date number to improve discoverability */
.today-badge {
  font-size: 11px; color: var(--primary); background: color-mix(in srgb, var(--primary-weak), transparent 68%); padding: 4px 6px; border-radius: 999px; justify-self: start; align-self: start; margin-top: 4px; font-weight: 700;
}

/* slightly larger touch targets and clearer spacing for mobile */
@media (max-width: 640px) {
  .day { padding: 10px; min-height: 76px; border-radius: 12px; }
  .calendar-grid { gap: 8px; }
  .day .d { font-size: 15px; }
}

/* small dot indicator for days with posts */
.day .dot {
  width: 10px; height: 10px; border-radius: 50%; background: var(--primary); justify-self: end; align-self: start; margin-top: -2px; box-shadow: 0 2px 6px rgba(0,0,0,0.12);
}

/* lighter visual cue for days with posts when not selected */
.day.has-posts { background: color-mix(in srgb, var(--primary-weak), transparent 94%); }

/* count badge - floats at bottom-left */
.day .count {
  font-size: 11px; color: var(--muted); background: transparent; padding: 2px 6px; border-radius: 999px; justify-self: start;
}

/* header buttons and title improvements */
.calendar .header { gap: 8px; }
.calendar .header .btn { width: 40px; height: 40px; padding: 0; display: grid; place-items: center; border-radius: 10px; }
.calendar .header .btn:hover { background: color-mix(in srgb, var(--primary-weak), transparent 92%); border-color: color-mix(in srgb, var(--primary), transparent 80%); }
.calendar .header #title { cursor: pointer; }
.calendar .header #title:hover { text-decoration: underline; }

/* responsive tweaks: make days a bit taller on small screens for touch */
@media (max-width: 420px) {
  .day { min-height: 78px; padding: 10px; border-radius: 12px; }
  .calendar-weekdays { font-size: 12px; }
}

.grid { display: grid; gap: 10px; grid-template-columns: repeat(3, 1fr); }
@media (min-width: 680px) {
  .grid { grid-template-columns: repeat(4, 1fr); }
}
.tile { aspect-ratio: 1 / 1; border-radius: 10px; overflow: hidden; border: 1px solid var(--border); background: #0001; display: flex; align-items: center; justify-content: center; }
.tile img { width: 100%; height: 100%; object-fit: cover; object-position: center center; }

/* ensure anchors used as user links have a clear focus ring */
.user-link:focus { outline: 3px solid color-mix(in srgb, var(--primary), transparent 60%); outline-offset: 4px; border-radius: 999px; }

/* make user links (avatar + name) more spacious */
.user-link {
  display: flex; /* redundant with some inline styles but safe to keep */
  align-items: center;
  gap: 12px; /* increased spacing between avatar and name */
}

/* Followed user ring + subtle pop animation */
/* Subtle follow ring that stays close to the button and pops gently */
.btn.following {
  position: relative; /* create stacking context for ring */
  transition: transform 200ms var(--transition-mid), background 200ms var(--transition-mid);
}
.btn.following::after {
  content: "";
  position: absolute; inset: 0; /* match button box */
  margin: -6px; /* keep ring tight but visible */
  border-radius: 999px;
  pointer-events: none;
  border: 2px solid rgba(34,197,94,0.06); /* subtle outline */
  box-shadow: 0 6px 14px rgba(34,197,94,0.06); /* gentle glow */
  opacity: 1;
  transform: scale(1);
}
.btn.following-anim::after {
  animation: followPop 420ms cubic-bezier(.2,.8,.2,1);
}
.btn.unfollow-anim::after {
  animation: unfollowPop 420ms cubic-bezier(.2,.8,.2,1);
}
@keyframes followPop {
  0% { transform: scale(.96); opacity: .0; }
  40% { transform: scale(1.06); opacity: 1; }
  70% { transform: scale(1.02); opacity: .95; }
  100% { transform: scale(1); opacity: 1; }
}

@keyframes unfollowPop {
  0% { transform: scale(1); opacity: 1; }
  40% { transform: scale(.96); opacity: .8; }
  70% { transform: scale(.98); opacity: .4; }
  100% { transform: scale(1); opacity: 0; }
}

/* Profile header layout refinements */
.profile-header {
  padding: 16px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  /* allow the avatar to overflow slightly (shadow, transform) without being clipped */
  overflow: visible;
  z-index: 60; /* sit above nearby cards but below modals/overlays */
  width: 100%;
  box-sizing: border-box;
}

/* On wider screens keep the profile header constrained and centered so
   it doesn't stretch edge-to-edge like a full-bleed element. This matches
   the app's main content max width. */
@media (min-width: 900px) {
  .profile-header {
    max-width: var(--maxw);
    margin: 0 auto;
    padding-left: 12px;
    padding-right: 12px;
  }
}

/* Ensure the posts grid that appears after the profile header is aligned
   to the same centered max width so images line up with the header panel. */
@media (min-width: 900px) {
  .profile-header ~ .grid {
    max-width: var(--maxw);
    margin: 0 auto;
    padding-left: 12px;
    padding-right: 12px;
    box-sizing: border-box;
  }
}

/* Keep post pages, post editor, and uploader content aligned with the app
   max width on larger screens so they don't render edge-to-edge. */
@media (min-width: 900px) {
  .post-view-wrap,
  .post-editor,
  .uploader {
    max-width: var(--maxw);
    margin: 0 auto;
    padding-left: 12px;
    padding-right: 12px;
    box-sizing: border-box;
    width: 100%;
  }

  /* Ensure the toolbar inside post pages also aligns visually with the content */
  .post-view-wrap .toolbar,
  .uploader .toolbar {
    max-width: var(--maxw);
    margin: 0 auto;
    padding-left: 12px;
    padding-right: 12px;
    box-sizing: border-box;
    width: 100%;
  }
}
/* left column: avatar + text. Use flex so text can shrink/wrap without pushing avatar */
.profile-left { display: flex; flex-direction: column; gap: 12px; align-items: center; min-width: 0; }
.profile-left > div { min-width: 0; overflow: hidden; text-align: center; }
.profile-left .username { font-size: 18px; }

/* Ensure bio inside header doesn't push/clip avatar. Keep it readable but constrained. */
.profile-bio {
  margin-top: 6px;
  /* clamp to ~3 lines and show ellipsis; include both vendor and newer property for compatibility */
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
  /* standard property for newer toolchains / linter compatibility */
  line-clamp: 3;
  white-space: normal;
}

/* keep the left column from touching container edges and ensure avatar is not clipped */
.profile-left { overflow: visible !important; padding-left: 6px; }

/* ensure avatar doesn't shrink and remains visible */
.profile-avatar { flex: 0 0 auto; }

/* let the avatar and avatar button sit above nearby rounded elements that might overlap */
.profile-avatar { position: relative; z-index: 4; }
.avatar-button { position: relative; z-index: 5; }

/* Ensure header and its immediate containers don't clip the avatar image */
.toolbar, .profile-header, .profile-left, .profile-actions, .user-link {
  overflow: visible !important;
}

/* make sure the avatar image renders as a block-level element so rounding/outline are consistent */
.profile-avatar { display: block; box-sizing: border-box; }

/* Make avatar clickable without showing native button chrome */
.avatar-button {
  border: none;
  background: transparent;
  padding: 0;
  display: inline-block;
  line-height: 0;
  cursor: pointer;
  position: relative; /* required for tooltip positioning */
  transition: transform 160ms var(--transition-fast), box-shadow 160ms var(--transition-fast);
}
.avatar-button:focus { outline: 3px solid color-mix(in srgb, var(--primary), transparent 64%); outline-offset: 4px; border-radius: 10px; }

/* actionable avatar hover highlight and subtle lift */
.avatar-button .profile-avatar {
  transition: transform 180ms var(--transition-fast), box-shadow 180ms var(--transition-fast);
  will-change: transform, box-shadow;
}
.avatar-button:hover .profile-avatar,
.avatar-button:focus .profile-avatar {
  transform: translateY(-3px) scale(1.02);
  box-shadow: 0 8px 26px rgba(0,0,0,0.28);
}

/* gentle idle pulse to indicate the avatar is actionable (not on touch devices) */
@media (hover: hover) {
  .avatar-button[data-tooltip] .profile-avatar { animation: idlePulse 4.2s ease-in-out infinite 1s; }
  @keyframes idlePulse {
    0% { transform: translateY(0) scale(1); }
    50% { transform: translateY(-2px) scale(1.01); }
    100% { transform: translateY(0) scale(1); }
  }
}

/* Tooltip: only show on devices that support hover to avoid interfering with touch */
@media (hover: hover) {
  .avatar-button[data-tooltip]::after {
    content: attr(data-tooltip);
    position: absolute;
    top: -36px;
    right: 0;
    background: var(--bg-elev);
    color: var(--muted);
    padding: 6px 8px;
    border-radius: 8px;
    font-size: 12px;
    border: 1px solid var(--border);
    box-shadow: 0 8px 22px rgba(0,0,0,0.12);
    opacity: 0;
    transform: translateY(6px);
    transition: opacity 160ms var(--transition-fast), transform 160ms var(--transition-fast);
    pointer-events: none;
    white-space: nowrap;
    z-index: 80;
  }
  .avatar-button[data-tooltip]::before {
    content: "";
    position: absolute;
    top: -22px;
    right: 12px;
    width: 10px; height: 10px; background: var(--bg-elev);
    border-left: 1px solid var(--border); border-top: 1px solid var(--border);
    transform: rotate(45deg);
    opacity: 0;
    transition: opacity 120ms var(--transition-fast);
    z-index: 79;
  }
  .avatar-button:hover[data-tooltip]::after,
  .avatar-button:focus[data-tooltip]::after {
    opacity: 1;
    transform: translateY(0);
  }
  .avatar-button:hover[data-tooltip]::before,
  .avatar-button:focus[data-tooltip]::before {
    opacity: 1;
  }
}

/* keep action buttons grouped and anchored so overlays can align to them */
.profile-actions {
  white-space: nowrap;
  position: relative; /* anchor for .edit-panel */
  display: flex;
  gap: 8px;
  align-items: center;
}

/* Edit profile overlay panel to avoid pushing layout when toggling edit mode */
.edit-panel {
  position: absolute;
  left: 50%;
  top: calc(100% + 8px);
  transform: translateX(-50%) translateY(-6px) scale(.995);
  background: var(--bg);
  border: 1px solid var(--border);
  padding: 12px;
  border-radius: 10px;
  box-shadow: var(--shadow);
  /* ensure the panel floats above fixed nav and other overlays */
  z-index: 100002;
  width: 360px;
  opacity: 0;
  transition: opacity 200ms var(--transition-fast), transform 200ms var(--transition-fast);
  animation: popIn 220ms var(--transition-mid) both;
}

/* caret arrow pointing to the actions group */
.edit-panel::before {
  content: "";
  position: absolute;
  top: -8px;
  left: 50%;
  transform: translateX(-50%) rotate(45deg);
  width: 14px;
  height: 14px;
  background: var(--bg);
  border-left: 1px solid var(--border);
  border-top: 1px solid var(--border);
  box-shadow: -2px -2px 6px rgba(0,0,0,0.04);
}

/* cap the panel height and allow scrolling for small screens or long content */
.edit-panel { max-height: calc(100vh - 120px); overflow: auto; }

/* On wider screens use a two-column layout for the edit panel so the bio can
   sit in the right column and align vertically with the stacked inputs on the left. */
@media (min-width: 720px) {
  .edit-panel {
    display: grid;
    grid-template-columns: 1fr 340px; /* left column for display/username, right for bio */
    gap: 12px;
    align-items: start;
    width: 560px; /* keep a comfortable width when anchored to actions */
  }

  .edit-panel label { margin-bottom: 0; }

  /* place the bio label/textarea in the right column and span the height of
     the two inputs so the textarea lines up with them */
  .edit-panel label:nth-child(3) {
    grid-column: 2 / 3;
    grid-row: 1 / span 2;
    align-self: stretch;
  }

  .edit-panel .bio-editor {
    height: 100%;
    min-height: 64px;
    box-sizing: border-box;
  }
}

@keyframes popIn {
  from { opacity: 0; transform: translateX(-50%) translateY(-8px) scale(.98); }
  to { opacity: 1; transform: translateX(-50%) translateY(0) scale(1); }
}

/* Small screens: anchor the edit panel as a compact popover from the
   profile actions area so it doesn't cover a large portion of the grid.
   Cap the height so it never dominates the screen; make inner content
   scrollable and keep the caret/arrow visible. */
@media (max-width: 680px) {
  .profile-header { position: relative; }

  .edit-panel {
   /* center in viewport on small screens so the popover never appears off-center
     when the actions container flows or wraps. Use fixed to avoid ancestor
     overflow/scrolling issues and ensure it sits above the tabbar/header. */
   position: fixed;
   left: 50%;
   top: 50%;
   transform: translate(-50%, -50%);
   /* Allow the panel to be noticeably wider on modern phones while capping
     at a comfortable maximum so desktop/tablet layouts are unaffected. */
   width: min(94vw, 420px);
   /* Increase max-height so taller phones can show more content before scrolling */
   max-height: calc(100vh - 120px);
   overflow: auto;
   box-shadow: var(--shadow);
   border: 1px solid var(--border);
   background: var(--bg);
   padding: 12px;
   border-radius: 12px;
   z-index: 99999;
   animation: popIn 220ms var(--transition-mid) both;
   display: flex;
   flex-direction: column;
  }

  .edit-panel::before {
    /* hide caret when centered in viewport */
    display: none;
  }

  /* make the content area scroll if needed, keep actions visible */
  .edit-panel > :not(.edit-actions) {
    flex: 1 1 auto;
    overflow: auto;
  }

  .edit-panel .edit-actions {
    position: sticky;
    bottom: 8px;
    margin-top: 8px;
    display: flex;
    gap: 8px;
    justify-content: flex-end;
    z-index: 2;
  }

  /* Slightly tighter spacing inside the popover so more fields fit */
  .edit-panel .input,
  .edit-panel .bio-editor { padding: 8px; font-size: 14px; }

  /* center display name / username inputs on small screens to match mobile layout */
  .edit-panel .input,
  .inline-edit-card .input {
    text-align: center;
  }
  .edit-panel .input::placeholder,
  .inline-edit-card .input::placeholder {
    text-align: center;
  }

  .edit-panel .edit-actions .btn { padding: 6px 10px; font-size: 13px; }
}

/* Profile: improved mobile layout so header content doesn't overflow */
@media (max-width: 640px) {
  /* stack header content and tighten padding */
  .profile-header {
    flex-direction: column;
    align-items: center;
    gap: 10px;
    padding: 10px;
  }

  /* keep avatar and name stacked vertically, allow actions to flow beneath */
  .profile-left {
    display: flex;
    flex-direction: column;
    gap: 10px;
    align-items: center;
    width: 100%;
    min-width: 0;
  }

  /* let actions wrap to new lines instead of overflowing; make them full-width area */
  .profile-actions {
    width: 100%;
    display: flex;
    gap: 8px;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 4px;
  }

  /* slightly smaller avatar on phones */
  .profile-avatar { width: 56px; height: 56px; border-radius: 12px; }

  /* reduce button padding and font-size so more buttons fit per row */
  .profile-actions .btn { padding: 8px 10px; font-size: 13px; }

  /* ensure username wraps and doesn't push layout */
  .profile-left > div { min-width: 0; }

  /* make the posts grid easier to view on mobile */
  .grid { grid-template-columns: repeat(2, 1fr); gap: 8px; }
}

/* Very small screens: single column grid to maximize image size */
@media (max-width: 360px) {
  .grid { grid-template-columns: 1fr; }
  .profile-actions { justify-content: flex-start; }
}

/* ensure buttons in actions are vertically aligned and have consistent spacing */
.profile-actions .btn { vertical-align: middle; }

/* improve toolbar density on small screens */
.toolbar { padding: 10px; }

/* subtle refinement to username line spacing */
.user-line { line-height: 1.05; }

.toolbar {
  display: flex; gap: 8px; align-items: center; justify-content: space-between;
  background: var(--bg-elev); border: 1px solid var(--border); border-radius: var(--radius);
  padding: 8px 10px;
}

/* subtle entrance for toolbar title and subtitle */
@keyframes toolbarIn {
  from { opacity: 0; transform: translateY(6px); }
  to { opacity: 1; transform: translateY(0); }
}
.toolbar-title {
  display: block;
  animation: toolbarIn 420ms var(--transition-mid) both;
}
.toolbar-sub {
  display: block;
  color: var(--muted);
  font-size: 12px;
  animation: toolbarIn 520ms var(--transition-mid) both;
  animation-delay: 80ms;
}

@media (prefers-reduced-motion: reduce) {
  .toolbar-title, .toolbar-sub { animation: none !important; transform: none !important; }
}

/* profile header specific */
.profile-header { padding: 14px; display: flex; flex-direction: column; align-items: center; gap: 12px; }
.profile-avatar { width: 84px; height: 84px; border-radius: 18px; object-fit: cover; border: 2px solid var(--border); }
.profile-header .username { font-size: 18px; }
.profile-header .dim { font-size: 13px; }
.follow-btn { padding: 8px 12px; border-radius: 999px; }
.follow-btn[aria-pressed="true"] { background: color-mix(in srgb, var(--primary), transparent 86%); border-color: transparent; }

/* About card: constrain very long bios so they don't push header/avatar off-screen */
.about-card .card-body { max-height: 220px; overflow: auto; }
.about-card .card-body .dim { white-space: pre-wrap; }

/* view toggle */
.view-toggle { display:flex; justify-content:space-between; align-items:center; gap:12px; padding: 8px 10px; background: transparent; }
.view-toggle .btn { padding: 6px 10px; }

/* Uploader: blurred preview while processing */
.preview img {
  /* make unblur feel subtle and intentional: longer, smoother filter transition */
  transition: filter 560ms cubic-bezier(.2,.7,.2,1), transform 300ms var(--transition-fast), opacity 360ms var(--transition-mid);
  will-change: filter, transform, opacity;
}
.preview.processing img {
  /* slightly stronger blur while processing and a gentle scale/opacity change */
  filter: blur(10px) saturate(0.92) opacity(0.88);
  transform: scale(1.01);
}
.preview-badge {
  position: absolute;
  left: 12px;
  top: 12px;
  background: color-mix(in srgb, var(--bg-elev), var(--primary) 6%);
  color: var(--text);
  border: 1px solid var(--border);
  padding: 6px 10px;
  border-radius: 999px;
  font-weight: 700;
  display: inline-flex;
  gap: 8px;
  align-items: center;
  z-index: 70;
}
.preview-badge svg { width: 16px; height: 16px; color: var(--primary); }

/* feed/explore grid variations */
.feed.grid-view { padding: 4px 0; }
.feed.grid-view .grid { gap: 8px; grid-template-columns: repeat(3, 1fr); }
@media (min-width: 900px) { .feed.grid-view .grid { grid-template-columns: repeat(4, 1fr); } }

/* make grid tiles slightly taller on large screens */
@media (min-width: 900px) { .grid .tile { aspect-ratio: 4 / 3; } }

/* toast */
.toast {
  position: fixed; bottom: calc(80px + var(--safe-bottom)); left: 50%; transform: translateX(-50%);
  background: var(--text); color: var(--bg); padding: 10px 14px; border-radius: 999px;
  font-size: 14px; z-index: 999; box-shadow: var(--shadow);
  animation: toast 280ms var(--transition-mid);
}
@keyframes toast { from { transform: translate(-50%, 8px); opacity: 0; } }

.skeleton {
  background: linear-gradient(90deg, #0000, #0001, #0000);
  background-size: 200% 100%;
  animation: shimmer 1.1s infinite linear;
}
@keyframes shimmer {
  to { background-position: -200% 0; }
}

.hidden { display: none !important; }

@media (prefers-reduced-motion: reduce) {
  * { transition: none !important; animation: none !important; }
}

/* When rendering initially, the html element may have .no-transitions to
   suppress animations while theme is applied. This must be present in the
   server CSS to prevent hydration mismatches. */
.no-transitions, .no-transitions * , .no-transitions *::before, .no-transitions *::after {
  transition: none !important;
  animation: none !important;
}

/* Preloader splash overlay */
.preloader-overlay {
  position: fixed;
  inset: 0;
  display: grid;
  place-items: center;
  background: color-mix(in srgb, var(--bg), transparent 8%);
  z-index: 999999;
  pointer-events: auto; /* block interactions while shown */
  transition: opacity 420ms var(--transition-mid), transform 420ms var(--transition-mid);
  opacity: 1;
}
.preloader-exit { opacity: 0; transform: scale(0.996) translateY(-6px); pointer-events: none; }
.preloader-inner {
  display: flex; flex-direction: column; align-items: center; gap: 12px;
  background: transparent; color: var(--text);
}
.preloader-logo { display: block; width: 86px; height: 86px; color: var(--primary); animation: preloader-spin 1400ms cubic-bezier(.2,.8,.2,1) infinite; }
.preloader-wordmark { font-weight: 800; letter-spacing: 0.6px; font-size: 16px; color: var(--text); opacity: 0.98; }

/* In dark mode the preloader shows over a dark background; invert the logo so
  the SVG (which may be dark) remains visible. We target both the dataset
  based theme and the legacy `.dark` class. */
:root[data-theme="dark"] .preloader-logo img,
:root[data-theme="dark"] .preloader-logo,
.dark .preloader-logo img,
.dark .preloader-logo {
  /* invert only the logo visual. If the logo is an inline SVG or uses currentColor
    the color variables will handle it, but we include filter invert as a safe fallback. */
  filter: invert(1) hue-rotate(180deg);
}

@keyframes preloader-spin {
  0% { transform: rotate(0); }
  50% { transform: rotate(90deg); }
  100% { transform: rotate(360deg); }
}

@media (prefers-reduced-motion: reduce) {
  .preloader-logo { animation: none !important; }
  .preloader-overlay { transition: none !important; }
}

/* Blur content while preloader is active, then smoothly remove blur when it exits */
:root, html {
  /* ensure transition targets exist */
  --preloader-blur: 8px;
}
.app-content {
  /* ensure filter transitions are defined on the element itself so removing
     the `.preloader-active` class animates the change (otherwise the
     transition is removed at the same moment the class is removed and it
     snaps). Use a slightly longer duration for a subtle unblur. */
  transition: filter 1000ms cubic-bezier(.2,.65,.2,1);
  will-change: filter;
}

.preloader-active .app-content {
  filter: blur(var(--preloader-blur)) saturate(0.95);
  pointer-events: none; /* prevent interaction with app during preload */
}
.preloader-active body { overflow: hidden; }

/* Ensure the navigation (and header if present outside .app-content) also
   blurs while the preloader is active so they unblur in sync with the page
   content. Define the same transition on the nav/header so the removal of
   the `.preloader-active` class animates the filter change. */
.tabbar, .header {
  transition: filter 1000ms cubic-bezier(.2,.65,.2,1);
  will-change: filter;
}

.preloader-active .tabbar,
.preloader-active .header {
  filter: blur(var(--preloader-blur)) saturate(0.95);
  pointer-events: none; /* keep nav non-interactive while preloading */
}

/* When .preloader-active is removed the filter transition back to none creates the unblur effect */
@media (prefers-reduced-motion: reduce) {
  .preloader-active #app-root { filter: none !important; transition: none !important; }
}

/* --- Fix: keep image editor toolbar visible at different zoom levels --- */
/*
  Problem: The editor's top toolbar can be clipped or pushed behind sticky
  header at certain browser zooms because ancestor containers use
  overflow: hidden / stacking contexts. To avoid layout regressions we
  only change positioning while a preview is in editing mode.
*/
.preview.editing {
  /* ensure inner preview can escape ancestor clipping */
  overflow: visible;
}

.preview-inner.editing {
  /* lift the editing preview out of normal flow so its toolbar is never
     clipped by .content (which uses overflow:hidden). Using fixed keeps
     it centered and stable at any zoom level. */
  position: fixed;
  top: calc(50% + 10px);
  left: 50%;
  transform: translate(-50%, -50%);
  width: min(92vw, var(--maxw));
  max-height: calc(92vh - 40px);
  z-index: 99999; /* above header, tabbar, and other overlays */
  margin: 0;
  box-shadow: 0 18px 48px rgba(0,0,0,0.45);
  border-radius: 14px;
}

.preview-inner.editing .image-editor,
.preview-inner.editing .image-editor * {
  z-index: 99999 !important; /* ensure toolbar & controls stay on top */
}

/* Inline edit card used in header for editing profile directly in place */
.inline-edit-card {
  position: relative;
  background: var(--bg-elev);
  border: 1px solid var(--border);
  padding: 14px;
  border-radius: 12px;
  box-shadow: 0 12px 36px rgba(0,0,0,0.22);
  animation: cardPop 220ms var(--transition-mid) both;
  display: grid;
  gap: 10px;
}
.inline-edit-card .input, .inline-edit-card .bio-editor { width: 100%; }

@keyframes cardPop {
  from { opacity: 0; transform: translateY(-8px) scale(.994); }
  to { opacity: 1; transform: translateY(0) scale(1); }
}

/* Use two-column layout on wider screens so editor uses horizontal space efficiently */
@media (min-width: 720px) {
  .inline-edit-card {
    grid-template-columns: 1fr 340px; /* left fields + right-side bio */
    align-items: start;
  }
  .inline-edit-card label { margin-bottom: 0; }
  .inline-edit-card label:nth-child(1) { grid-column: 1 / 2; }
  .inline-edit-card label:nth-child(2) { grid-column: 1 / 2; }
  /* place the bio panel in the right column and align it to the top so
     it lines up with the Display name field. Span the rows so the textarea
     has enough vertical space beside the stacked inputs. */
  .inline-edit-card label:nth-child(3) {
    grid-column: 2 / 3;
    grid-row: 1 / span 2;
    /* stretch to fill the vertical space of the spanned rows so the
       bottom of the bio lines up with the username on the left column */
    align-self: stretch;
  }

  /* Prefer class-based selector to avoid relying on exact DOM order */
  .inline-edit-card .bio-col {
    grid-column: 2 / 3;
    grid-row: 1 / span 2;
    align-self: stretch;
  }

  .inline-edit-card .bio-col .bio-editor {
    height: 85%;
    min-height: 64px; /* slightly reduced so the bio doesn't feel too tall */
    box-sizing: border-box;
  }
}

/* Make inline edit card more usable on small screens (match edit-panel behavior) */
@media (max-width: 680px) {
  .inline-edit-card {
    /* Override inline styles from the component so the card can be wider on phones */
    width: min(96vw, 460px) !important;
    max-width: none !important;
    max-height: calc(100vh - 120px) !important;
    overflow: auto !important;
    padding: 14px !important;
    border-radius: 12px !important;
    box-sizing: border-box !important;
    margin: 0 auto !important;
  }
  .inline-edit-card .input,
  .inline-edit-card .bio-editor { padding: 8px; font-size: 14px; }
}

/* Portal root styles: ensure full-screen overlay for modals rendered into the portal */
#modal-root {
  position: fixed;
  inset: 0;
  z-index: 99999;
  /* align to top so tall content can scroll into view; center horizontally */
  display: flex;
  align-items: flex-start;
  justify-content: center;
  padding: 24px; /* breathing room on small screens */
  overflow: auto; /* allow vertical scrolling when content exceeds viewport */
  -webkit-overflow-scrolling: touch;
  pointer-events: none; /* allow inner modal to opt into pointer events */
}

#modal-root > * {
  pointer-events: auto;
  /* constrain immediate child so it never exceeds viewport and can scroll internally */
  max-height: calc(100vh - 48px);
  overflow: auto;
  width: 100%;
}

/* Make Swiper slides full-bleed and responsive so they fill the content area
   and avoid rendering as a narrow centered column in small viewports. */
  .swipe-views {
    width: 100% !important;
    /* don't force a fixed height here; let individual slides size themselves */
    /* Ensure touch events can be detected for horizontal swipes */
    touch-action: pan-y pinch-zoom;
  }
  .swipe-views .swiper-wrapper {
    width: 100% !important;
    /* don't force a fixed height here; let the active slide determine wrapper height */
    touch-action: pan-y pinch-zoom;
  }
.swipe-views .swiper-slide {
  width: 100% !important;
  height: auto !important; /* allow taller content while still guaranteeing full-touch area */
  display: block;
  /* Ensure every main slide (feed, explore, upload, calendar, profile) covers the viewport height
     beneath the header + bottom nav so horizontal swipes register anywhere on screen, not just
     where content exists. Previously only the feed slide had this min-height which caused the
     calendar slide to leave a dead swipe zone below its content. */
  min-height: calc(100vh - 160px);
  /* Allow vertical panning and pinch zoom, but let Swiper intercept horizontal swipes */
  touch-action: pan-y pinch-zoom;
}

@media (max-width: 900px) {
  .swipe-views .swiper-slide { min-height: calc(100vh - 140px); }
}

/* Break out of centered .content container so the Swiper can be full-bleed
   while preserving the normal layout for other pages. Targets the Swiper
   when it's a direct child of .content (our usage in AppShell). */
.content > .swipe-views {
  width: 100vw !important;
  max-width: 100vw !important;
  margin-left: calc(50% - 50vw) !important; /* center full-bleed child */
  margin-right: calc(50% - 50vw) !important;
  /* remove app padding from the full-bleed wrapper so slides can be
     exactly viewport width; slide content will receive padding instead */
  padding-left: 0 !important;
  padding-right: 0 !important;
  /* Prevent neighbouring slides from peeking on small screens */
  overflow: hidden;
  box-sizing: border-box;
  position: relative;
}

/* Make each swiper slide exactly the viewport width and apply the app padding
   to slide content so visuals match the rest of the app while keeping the
   slide clipping correct. */
.swipe-views .swiper-slide {
  width: 100vw !important;
  min-width: 100vw !important;
  box-sizing: border-box !important;
  padding-left: 12px !important;
  padding-right: 12px !important;
}

.swipe-views .swiper-slide {
  display: flex !important;
  flex-direction: column;
  align-items: stretch;
}

/* If content within a slide needs to center vertically, pages/components
   can use .slide-center to opt-in to vertical centering without affecting
   general layout. */
.slide-center { display: grid; place-items: start center; }



/* keep the preview visually contained when not editing */
.preview-inner { transition: none; }

/* Confirm popover anchored to action buttons (used for Delete) */
.confirm-popover {
  position: absolute;
  right: 8px;
  top: calc(100% + 10px);
  background: var(--bg);
  border: 1px solid var(--border);
  padding: 8px;
  border-radius: 12px;
  box-shadow: 0 10px 30px rgba(0,0,0,0.14);
  z-index: 60;
  width: min(320px, 86vw);
  transform-origin: top right;
  animation: popConfirm 200ms var(--transition-mid) both;
}
.confirm-popover-arrow {
  position: absolute;
  top: -8px;
  right: 18px;
  width: 14px;
  height: 14px;
  background: var(--bg);
  border-left: 1px solid var(--border);
  border-top: 1px solid var(--border);
  transform: rotate(45deg);
  z-index: -1;
}
.confirm-popover-body { display: grid; gap: 8px; }
.confirm-message { color: var(--muted); font-size: 14px; }
.confirm-actions { display: flex; gap: 8px; justify-content: flex-end; }

@keyframes popConfirm {
  from { opacity: 0; transform: translateY(-6px) scale(.98); }
  to { opacity: 1; transform: translateY(0) scale(1); }
}

/* Danger / Delete button styling */
.btn.danger {
  background: linear-gradient(180deg, color-mix(in srgb, var(--danger), transparent 12%), var(--danger));
  color: white;
  border-color: transparent;
  box-shadow: 0 10px 26px color-mix(in srgb, var(--danger), transparent 70%);
}
.btn.danger:hover { transform: translateY(-2px) scale(1.01); }
.btn.danger:active { transform: translateY(0) scale(.998); }

/* subtle red pulse when header delete is pressing */
.pressing-delete {
  animation: pressDanger 400ms ease-in-out;
}
@keyframes pressDanger {
  0% { box-shadow: 0 0 0 0 rgba(239,68,68,0.0); }
  30% { box-shadow: 0 6px 20px rgba(239,68,68,0.08); transform: translateY(1px) scale(.998); }
  100% { box-shadow: 0 0 0 0 rgba(239,68,68,0); transform: translateY(0) scale(1); }
}
