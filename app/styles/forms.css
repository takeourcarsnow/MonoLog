.uploader { display: grid; gap: 12px; }
.drop {
  border: 2px dashed var(--border);
  padding: 16px; border-radius: var(--radius); text-align: center; color: var(--muted);
  transition: border-color var(--transition-fast), background var(--transition-fast);
  position: relative;
}
.drop.dragover { border-color: var(--primary); background: color-mix(in srgb, var(--primary-weak), transparent 70%); color: var(--text); }
.drop-loader {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 12px;
  background: color-mix(in srgb, var(--bg), rgba(0,0,0,0.6));
  backdrop-filter: blur(8px);
  z-index: 10;
  border-radius: var(--radius);
  color: var(--text);
}
.drop-loader svg {
  color: var(--primary);
}
.preview { overflow: hidden; border-radius: var(--radius); }
.preview img { max-width: 100%; width: auto; height: auto; display: block; margin: 0 auto; }

/* Enhanced uploader styles */
.drop { display: grid; place-items: center; min-height: 160px; cursor: pointer; }
.drop-inner { display: grid; place-items: center; gap: 6px; }
.drop-icon { width: 62px; height: 62px; border-radius: 18px; display: grid; place-items: center; font-weight: 700; color: var(--primary); background: color-mix(in srgb, var(--primary-weak), transparent 28%); border: 1px dashed color-mix(in srgb, var(--primary), transparent 70%); font-size: 28px; }
.drop-text { font-weight: 600; }

.preview { display: none; }
.preview img { max-width: 100%; max-height: 480px; width: auto; height: auto; object-fit: contain; display: block; background: var(--bg); }
.preview-inner { max-height: 480px; overflow: hidden; border-radius: 14px; border: 1px solid var(--border); display: flex; align-items: center; justify-content: center; }
.preview.editing { overflow: visible; }
.preview-inner.editing { overflow: visible; z-index: 70; position: relative; }

/* Desktop uploader tweaks: keep preview from growing so large it pushes
  the publish/cancel controls offscreen at default browser zoom. Reserve
  extra bottom padding when a preview exists and cap preview heights
  relative to the viewport so buttons remain visible. */
@media (min-width: 900px) {
  /* Reserve more space at the bottom of the page when the uploader has a preview
    so the tabbar and publish controls do not overlap the form at default zoom. */
  /* Make more room at the bottom for the tabbar + action row so the publish
    controls are unlikely to be occluded on tall images at 100% zoom. */
  /* Reserve space equal to the fixed action bar height so page content
    (caption input, etc.) doesn't get overlapped. The action bar is fixed
    to the bottom and visually sits above the tabbar; keep container
    padding in sync with the action bar height. */
  .uploader.has-preview { padding-bottom: calc(92px + var(--safe-bottom)) !important; }

  /* Aggressively cap preview height on desktop so the form controls remain
    visible without requiring the user to scroll. */
  /* Cap preview heights so the form controls remain visible without forcing
    excessive empty space below the preview on desktop. Reduced chrome offset
    prevents unnecessarily large gaps that create a vertical scrollbar. */
  .uploader .preview-inner { max-height: min(40vh, calc(100dvh - 180px)); }
  .uploader .preview img { max-height: min(40vh, calc(100dvh - 180px)); }

  /* On wide screens, keep the normal layout spacing, but when a preview
     exists show the uploader action row as a fixed, centered bar above
     the bottom nav. This prevents reserving large blank space while
     keeping controls accessible. */
  .uploader .form-row { margin-top: 2px; }

  .uploader.has-preview .form-row {
    position: fixed;
    left: 50%;
    transform: translateX(-50%);
    bottom: calc(12px + var(--safe-bottom));
    z-index: 100002; /* must be above .tabbar (100001) */
    width: min(calc(100% - 48px), var(--maxw));
    height: 72px; /* reserve a consistent action bar height */
    display: flex;
    align-items: center; /* vertically center the buttons */
    justify-content: space-between;
   gap: 12px;
   /* Keep layout/spacing but remove the visible rounded container so
     buttons don't sit inside a separate box. */
   background: transparent;
   border-radius: 0;
   padding: 0 6px; /* keep a little horizontal breathing room */
   pointer-events: auto;
   box-shadow: none;
   z-index: 120000;
  }
}

/* Spacer to prevent the fixed action bar from overlapping page content.
   Adds an invisible block at the end of the uploader equal to the action
   bar height + safe area so inputs are always visible above the fixed bar. */
@media (min-width: 900px) {
  .uploader.has-preview::after {
    content: "";
    display: block;
    height: calc(32px + var(--safe-bottom));
    width: 100%;
    pointer-events: none;
  }
}

/* Reduce the vertical gap between the caption input and action pills specifically
   inside the uploader to make the controls feel more compact on desktop and mobile */
.uploader .form-row { margin-top: 2px; gap: 6px; }

/* Additional, page-scoped desktop override: prevent additive bottom padding
   (from .content + .uploader) from creating excessive empty space on wide
   screens. Keep the action row comfortably above the bottom nav. */
@media (min-width: 900px) {
  .content .uploader.has-preview { padding-bottom: calc(36px + var(--safe-bottom)) !important; }
  .content .uploader .form-row { bottom: calc(12px + var(--safe-bottom)) !important; }
}

/* When the upload UI includes a preview, reduce the outer content padding so
   the uploader controls don't create a large empty area. Use :has() to target
   the page container when it contains the uploader. Modern Chromium browsers
   support :has(); if the browser doesn't support it the fixed action bar
   fallback will still keep controls accessible. */
@media (min-width: 900px) {
  .content:has(.uploader.has-preview) {
    padding-bottom: calc(24px + var(--safe-bottom)) !important;
  }
}

/* Fallback for browsers without :has() â€” toggled by the uploader JS */
@media (min-width: 900px) {
  body.uploader-has-preview .content { padding-bottom: calc(24px + var(--safe-bottom)) !important; }
}

.image-editor { z-index: 80; position: relative; }
.preview:not(.hidden) { display: block; }

/* Image action buttons (edit/change) - icon-only with animations */
.image-actions { position: absolute; right: 12px; bottom: 12px; display: flex; gap: 8px; z-index: 10; }
.image-action-btn { position: relative; display: inline-flex; align-items: center; justify-content: center; width: 44px; height: 44px; border-radius: 50%; background: rgba(0, 0, 0, 0.75); backdrop-filter: blur(8px) saturate(140%); border: 1px solid rgba(255, 255, 255, 0.15); color: #fff; cursor: pointer; transition: all 240ms cubic-bezier(0.4, 0, 0.2, 1); box-shadow: 0 4px 14px rgba(0, 0, 0, 0.25); }
.image-action-btn svg { width: 20px; height: 20px; transition: transform 260ms cubic-bezier(0.34, 1.56, 0.64, 1), opacity 180ms ease; }
.image-action-btn:hover { transform: scale(1.08) translateY(-2px); background: rgba(0, 0, 0, 0.85); border-color: rgba(255, 255, 255, 0.25); box-shadow: 0 6px 20px rgba(0, 0, 0, 0.35); }
.image-action-btn:hover svg { transform: scale(1.1) rotate(-3deg); }
.image-action-btn:active { transform: scale(0.96); box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3); }
.image-action-btn:focus-visible { outline: 2px solid rgba(255, 255, 255, 0.6); outline-offset: 2px; }

/* Specific button animations */
.image-action-btn.edit-btn:hover svg { transform: scale(1.12) rotate(6deg); }
.image-action-btn.change-btn:hover svg { transform: scale(1.12) translateY(-2px); }

/* Light theme adjustments */
:root[data-theme="light"] .image-action-btn { background: rgba(255, 255, 255, 0.92); color: var(--text); border-color: rgba(0, 0, 0, 0.08); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12); }
:root[data-theme="light"] .image-action-btn:hover { background: rgba(255, 255, 255, 0.98); border-color: rgba(0, 0, 0, 0.12); box-shadow: 0 6px 18px rgba(0, 0, 0, 0.16); }

/* Mobile: slightly smaller icons */
@media (max-width: 640px) {
  .image-action-btn { width: 40px; height: 40px; }
  .image-action-btn svg { width: 18px; height: 18px; }
  .image-actions { right: 10px; bottom: 10px; gap: 6px; }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .image-action-btn, .image-action-btn svg { transition: none !important; }
  .image-action-btn:hover { transform: none; }
  .image-action-btn:hover svg { transform: scale(1); }
}

.form-row { display: flex; gap: 12px; align-items: center; justify-content: space-between; margin-top: 6px; }
.form-row .vis-label { display: flex; flex-direction: column; align-items: flex-start; gap: 6px; }
.visibility-select { padding: 8px 10px; border-radius: 8px; border: 1px solid var(--border); background: var(--bg); color: var(--text); }

/* Segmented visibility buttons (Public / Private) */
.form-row .vis-label .btn {
  border-radius: 999px;
  padding: 8px 14px;
  background: var(--bg-elev);
  border: 1px solid var(--border);
  color: var(--muted);
  box-shadow: none;
  transition: background var(--transition-fast), transform var(--transition-fast), box-shadow var(--transition-fast), color var(--transition-fast);
}
.form-row .vis-label .btn:hover {
  transform: translateY(-1px);
}
.form-row .vis-label .btn.active,
.form-row .vis-label .btn[aria-pressed="true"] {
  background: var(--primary);
  border-color: transparent;
  color: white;
  box-shadow: 0 12px 30px color-mix(in srgb, var(--primary), transparent 70%);
  transform: translateY(-6px);
}
.form-row .vis-label .btn:focus {
  outline: 3px solid color-mix(in srgb, var(--primary), transparent 64%);
  outline-offset: 4px;
}

/* Visibility icon and subtle animation */
.vis-icon { display: inline-grid; place-items: center; width: 18px; height: 18px; margin-right: 8px; position: relative; }
.vis-icon svg { position: absolute; top: 0; left: 0; width: 18px; height: 18px; color: currentColor; transition: opacity 180ms var(--transition-fast), transform 200ms var(--transition-fast); }
/* default: show open eye for Public, hide closed eye */
.form-row .vis-label button[data-type="public"] .vis-icon .eye-open { opacity: 1; transform: scale(1); }
.form-row .vis-label button[data-type="public"] .vis-icon .eye-closed { opacity: 0; transform: scale(0.92) rotate(-6deg); }
/* default: show closed eye for Private (muted) */
.form-row .vis-label button[data-type="private"] .vis-icon .eye-open { opacity: 0.42; transform: scale(0.98); }
.form-row .vis-label button[data-type="private"] .vis-icon .eye-closed { opacity: 0.9; transform: scale(1); }
/* when active, swap to the correct icon and apply subtle motion */
.form-row .vis-label button[data-type="public"][aria-pressed="true"] .vis-icon .eye-open {
  opacity: 1; transform: scale(1) rotate(0deg);
}
.form-row .vis-label button[data-type="public"][aria-pressed="true"] .vis-icon .eye-closed {
  opacity: 0; transform: scale(0.92) rotate(-6deg);
}

.form-row .vis-label button[data-type="private"][aria-pressed="true"] .vis-icon .eye-open {
  opacity: 0; transform: scale(0.92) rotate(6deg);
}
.form-row .vis-label button[data-type="private"][aria-pressed="true"] .vis-icon .eye-closed {
  opacity: 1; transform: scale(1) rotate(0deg);
}

/* active pill glow and lift */
.form-row .vis-label .btn.active {
  transform: translateY(-6px);
  color: #fff;
}
.form-row .vis-label .btn.active .vis-icon svg { color: #fff; }
.form-row .vis-label .btn.active::after {
  content: "";
  position: absolute;
  inset: -8px; /* expand behind the pill */
  border-radius: 999px;
  z-index: -1;
  background: radial-gradient(closest-side, color-mix(in srgb, var(--primary), transparent 40%), transparent 60%);
  filter: blur(10px);
  opacity: 0.95;
  transition: opacity 220ms var(--transition-fast), transform 220ms var(--transition-fast);
}

/* Public active pill: strong primary color */
.form-row .vis-label button[data-type="public"].active {
  background: var(--primary);
  border-color: transparent;
}

/* In light theme use dark text for the active visibility pill (pastel/weak primary)
   but keep white text in dark theme for contrast. These selectors are placed
   after the base rules to take precedence. */
:root[data-theme="light"] .form-row .vis-label .btn.active,
:root[data-theme="light"] .form-row .vis-label button[data-type="public"].active {
  color: var(--text) !important;
}
:root[data-theme="light"] .form-row .vis-label .btn.active .vis-icon svg,
:root[data-theme="light"] .form-row .vis-label button[data-type="public"].active .vis-icon svg {
  color: var(--text) !important;
}

/* Also ensure the vis-toggle CSS variable used for color is dark in light theme
   (vis-toggle uses --vis-color and applies it with !important). */
:root[data-theme="light"] .vis-toggle.public,
:root[data-theme="light"] .btn.vis-toggle.public,
:root[data-theme="light"] .form-row .vis-label button[data-type="public"].active.vis-toggle {
  --vis-color: var(--text) !important;
}

/* Private active pill: muted but still with visible accent */
.form-row .vis-label button[data-type="private"].active {
  background: linear-gradient(180deg, color-mix(in srgb, var(--bg-elev), rgba(255,255,255,0.02)), color-mix(in srgb, var(--primary), transparent 92%));
  border-color: transparent;
}

/* In light theme make Private active pill use dark text (match Public) */
:root[data-theme="light"] .form-row .vis-label button[data-type="private"].active {
  /* mix primary with the light background to produce a subtle blue pill */
  background: color-mix(in srgb, var(--primary), var(--bg) 62%);
  border-color: transparent;
  box-shadow: 0 12px 30px rgba(37,99,235,0.10);
  color: var(--text) !important;
}

/* Also ensure the vis-toggle CSS variable for private is dark in light theme */
:root[data-theme="light"] .vis-toggle.private,
:root[data-theme="light"] .btn.vis-toggle.private,
:root[data-theme="light"] .form-row .vis-label button[data-type="private"].active.vis-toggle {
  --vis-color: var(--text) !important;
}

/* Single toggle style for visibility (eye icon) */
/* ensure vis-toggle overrides base .btn styles when both are present */
.btn.vis-toggle,
.vis-toggle {
  /* use CSS vars so transitions are smooth between states */
  --vis-bg: var(--bg-elev);
  --vis-color: var(--text);
  --vis-glow: transparent;

  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 10px 16px; /* unified pill spacing */
  min-height: var(--action-pill-height,42px);
  border-radius: 999px;
  background: var(--vis-bg) !important;
  border: 1px solid var(--border) !important;
  color: var(--vis-color) !important;
  position: relative;
  transition: background 360ms cubic-bezier(.2,.8,.2,1), color 260ms var(--transition-fast), box-shadow 360ms cubic-bezier(.2,.8,.2,1), transform 220ms var(--transition-fast);
}
.vis-toggle::after {
  /* remove the large outer halo completely to avoid double-outline */
  display: none !important;
}
.vis-toggle .vis-icon { position: relative; width: 18px; height: 18px; display: inline-grid; place-items: center; }
.vis-toggle .vis-icon svg { position: absolute; top: 0; left: 0; width: 18px; height: 18px; transition: transform 320ms cubic-bezier(.2,.8,.2,1), opacity 260ms var(--transition-fast); }

.vis-toggle.public {
  /* Public: blue-ish pill (active visible state) */
  --vis-bg: color-mix(in srgb, var(--primary), var(--bg) 64%);
  --vis-color: #fff;
  --vis-glow: color-mix(in srgb, var(--primary), transparent 70%);
  transform: none;
  border-color: transparent;
  box-shadow: none; /* remove strong outer shadow that looks like an outline */
}

/* Ensure the toggle does not show an outline or shadow when focused */
.vis-toggle:focus,
.vis-toggle:focus-visible,
.btn.vis-toggle:focus,
.btn.vis-toggle:focus-visible {
  outline: none !important;
  box-shadow: none !important;
}
.vis-toggle.public .eye-open { opacity: 1; transform: translateY(0) scale(1); }
.vis-toggle.public .eye-closed { opacity: 0; transform: translateY(-6px) scale(0.92) rotate(-6deg); }

.vis-toggle.private {
  /* Private: dark-ish pill (hidden/private state) */
  --vis-bg: color-mix(in srgb, rgba(0,0,0,0.6), var(--bg) 36%);
  --vis-color: #fff;
  --vis-glow: transparent;
  transform: translateY(-1px);
  border-color: transparent;
  box-shadow: 0 6px 18px rgba(0,0,0,0.12);
}
.vis-toggle.private .eye-open { opacity: 0; transform: translateY(6px) scale(0.92); }
.vis-toggle.private .eye-closed { opacity: 1; transform: translateY(0) scale(1) rotate(0deg); }

/* focus state for accessibility */
.vis-toggle:focus { outline: 3px solid color-mix(in srgb, var(--primary), transparent 64%); outline-offset: 4px; }

/* subtle press feedback */
.vis-toggle:active { transform: translateY(-1px) scale(0.997); }

@media (prefers-reduced-motion: reduce) {
  .vis-toggle, .vis-toggle .vis-icon svg { transition: none !important; }
  .vis-toggle::after { transition: none !important; }
}

/* Improve contrast and affordance for the upload drop area on mobile */
.drop { transition: border-color var(--transition-fast), background var(--transition-fast), box-shadow var(--transition-fast), transform var(--transition-fast); }
.drop:hover { transform: translateY(-2px); box-shadow: 0 12px 36px rgba(0,0,0,0.08); }
.drop .drop-icon { transition: transform 220ms var(--transition-mid), box-shadow 220ms var(--transition-mid); }
.drop.dragover .drop-icon { transform: scale(1.06); box-shadow: 0 8px 28px rgba(0,0,0,0.12); }

/* make the drop icon circle more distinct on mobile and dark theme */
@media (max-width: 640px) {
  .drop { border-radius: 12px; }
  .drop .drop-icon { background: linear-gradient(180deg, color-mix(in srgb, var(--primary-weak), transparent 12%), color-mix(in srgb, var(--primary-weak), transparent 28%)); color: var(--primary); }
}

/* smaller label under buttons to emphasize primary action on mobile */
@media (max-width: 640px) {
  .form-row .vis-label .btn { padding: 10px 12px; }
}

.btn-group { display: flex; gap: 8px; align-items: center; }
.btn.primary { padding: 10px 14px; border-radius: 12px; font-weight: 700; }
.btn.ghost.replace { padding: 10px 12px; }
/* Cancel button unified logic
   - Base: neutral subtle pill (light/dark adapt via bg vars)
   - Confirm (double-tap): solid danger emphasis
   Keep transitions minimal & accessible. */
.btn.cancel-btn {
  position: relative;
  padding: 10px 18px;
  border-radius: 999px;
  font-weight: 600;
  font-size: 14px;
  line-height: 1;
  min-height: var(--action-pill-height,42px);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  letter-spacing: .25px;
  background: color-mix(in srgb, var(--bg-elev), var(--danger) 4%);
  border: 1px solid color-mix(in srgb, var(--danger), transparent 86%);
  color: color-mix(in srgb, var(--danger), var(--text) 65%);
  transition: background var(--transition-fast), border-color var(--transition-fast), color var(--transition-fast), box-shadow var(--transition-fast), transform var(--transition-fast);
}
.btn.cancel-btn:hover { background: color-mix(in srgb, var(--bg-elev), var(--danger) 6%); transform: translateY(-2px); }
.btn.cancel-btn:active { transform: translateY(0); }
.btn.cancel-btn.confirm {
  background: linear-gradient(135deg, color-mix(in srgb, var(--danger), transparent 6%), color-mix(in srgb, var(--danger), transparent 2%));
  color: #fff;
  border-color: color-mix(in srgb, var(--danger), transparent 12%);
  box-shadow: 0 6px 22px color-mix(in srgb, var(--danger), transparent 72%), 0 0 0 1px color-mix(in srgb, var(--danger), transparent 40%) inset;
  text-shadow: 0 1px 2px rgba(0,0,0,0.35);
}
.btn.cancel-btn.confirm:hover { background: linear-gradient(135deg, color-mix(in srgb, var(--danger), transparent 4%), color-mix(in srgb, var(--danger), transparent 0%)); }
.btn.cancel-btn:focus-visible { outline: none; box-shadow: 0 0 0 3px color-mix(in srgb, var(--danger), transparent 70%), 0 4px 16px rgba(0,0,0,0.18); }
.btn.cancel-btn.confirm:focus-visible { box-shadow: 0 0 0 3px color-mix(in srgb, var(--danger), transparent 55%), 0 6px 20px rgba(0,0,0,0.30); }
.btn.cancel-btn:disabled { opacity: .55; cursor: not-allowed; transform: none; }
.btn.cancel-btn .cancel-inner { position: relative; z-index: 1; }

/* Dark theme slight desaturation for base state for balance */
:root[data-theme="dark"] .btn.cancel-btn:not(.confirm) {
  background: color-mix(in srgb, var(--bg-elev), var(--danger) 6%);
  border-color: color-mix(in srgb, var(--danger), transparent 78%);
  color: color-mix(in srgb, var(--danger), var(--text) 72%);
}
:root[data-theme="dark"] .btn.cancel-btn:not(.confirm):hover { background: color-mix(in srgb, var(--bg-elev), var(--danger) 8%); }

/* Mobile full-width stacking coherence */
@media (max-width:640px){
  .btn-group .btn.cancel-btn { width:100%; }
}

.hidden { display: none !important; }

/* Mobile: stack form row */
@media (max-width: 640px) {
  .form-row { flex-direction: column; align-items: stretch; }
  .btn-group { justify-content: stretch; }
  .visibility-select { width: 100%; }
}

/* Uploader-specific mobile improvements: avoid overlap with bottom tabbar, tighten dropzone and thumbnails */
@media (max-width: 640px) {
  /* give uploader extra bottom padding only when images present so initial empty state doesn't force scroll */
  .uploader.has-preview { padding-bottom: calc(92px + var(--safe-bottom)) !important; }


/* Mobile refinement: make stacked action pills (visibility / publish / cancel) align and breathe */
@media (max-width: 640px) {
  /* Slightly reduce pill height on small screens for a tighter stack */
  :root { --action-pill-height: 38px; }

  .uploader .form-row { gap: 10px; align-items: center; }
  .uploader .form-row .btn-group { width: 100%; gap: 10px; align-items: center; }

  /* Give all three pills a consistent width, centered. Clamp to avoid overly wide on large phones */
  .uploader .form-row .vis-toggle,
  .uploader .form-row .publish-button,
  .uploader .form-row .btn.cancel-btn { 
    width: 100%;
    max-width: 240px; 
    margin: 0 auto; 
  }

  /* Ensure internal padding adapts with smaller height */
  .uploader .form-row .vis-toggle { padding: 8px 16px; }
  .uploader .form-row .publish-button { padding: 8px 18px; }
  .uploader .form-row .btn.cancel-btn { padding: 8px 18px; }
}
  /* slightly smaller drop area to fit mobile screens comfortably */
  .drop { min-height: 140px; padding: 12px; }
  .drop-icon { width: 44px; height: 44px; border-radius: 12px; font-size: 20px; }
  .drop-text { font-size: 14px; }

  /* reduce preview max height to keep controls visible and avoid large images pushing buttons off-screen */
  .preview-inner { max-height: 56vh; }
  .preview img { max-height: 52vh; }

  /* make thumbnail strip smaller and easier to tap */
  .uploader .thumbs { display: flex; gap: 8px; margin-top: 8px; justify-content: center; align-items: center; }
  .uploader .thumbs button { padding: 0; border-radius: 8px; overflow: hidden; border: 1px solid var(--border); }
  .uploader .thumbs img { width: 72px; height: 72px; object-fit: cover; display: block; }

  /* stack publish/replace buttons and make them full-width for easier tapping */
  .btn-group { display: flex; flex-direction: column; gap: 8px; }
  .btn-group .btn { width: 100%; display: inline-flex; justify-content: center; }

  /* center visibility controls under the caption input on small screens */
  .form-row .vis-label { align-items: center; width: 100%; }
  .form-row .vis-label [role="radiogroup"] { display: flex !important; justify-content: center; width: 100%; gap: 8px; }

  /* inputs stretch to full width and have comfortable spacing */
  .input { font-size: 15px; padding: 12px; }

  /* reduce carousel control sizes on small screens */
  .carousel-arrow { width: 34px; height: 34px; font-size: 20px; }
}

/* small helper: visually hidden but available to screen readers */
.sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); white-space: nowrap; border: 0; }

/* Auth form styles (sign in / sign up popup) */
.auth-form {
  display: flex;
  flex-direction: column;
  /* unified vertical spacing between inputs/buttons across sign-in/sign-up */
  gap: 12px; /* restore top spacing; we'll adjust inputs->button spacing separately */
  min-width: 260px;
}

/* Reduce the vertical space between the inputs block and the primary action
   without changing the spacing between inputs themselves. The form uses
   `gap` for overall vertical rhythm; we counteract it below for the single
   case of inputs -> actions to create a slightly tighter relationship. */
.auth-form .auth-actions {
  /* keep the actions flush with the form flow; spacing to inputs is
     controlled by `.inputs-wrap { margin-bottom }` so it remains
     consistent whether the username field is shown or hidden. */
  margin-top: 0 !important;
}

/* Fixed spacing between the inputs container and the actions. This
   provides a stable, predictable distance regardless of whether the
   compact username field (signup) is open or closed. */
.auth-form .inputs-wrap {
  margin-bottom: -6px; /* pull the actions up slightly so the inputs->button gap is smaller while top gaps remain 12px */
}
.auth-form.enhanced { max-width: 480px; width: 100%; margin: 0 auto; }
.auth-form.enhanced .field-group { width: 100%; }
.auth-form.enhanced .fancy-input { 
  background: linear-gradient(180deg, color-mix(in srgb, var(--bg-elev), transparent 4%), color-mix(in srgb, var(--bg-elev), transparent 14%));
  border: 1px solid color-mix(in srgb, var(--border), transparent 10%);
  backdrop-filter: saturate(140%) blur(4px);
  transition: border-color var(--transition-fast), background var(--transition-fast), box-shadow var(--transition-fast), transform 160ms var(--transition-fast);
  text-align: center;
}
.auth-form.enhanced .fancy-input:focus {
  border-color: color-mix(in srgb, var(--primary), transparent 40%);
  background: color-mix(in srgb, var(--primary-weak), transparent 82%);
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--primary), transparent 86%), 0 4px 18px rgba(0,0,0,0.24);
}
.auth-form.enhanced .fancy-input:hover:not(:focus) {
  border-color: color-mix(in srgb, var(--primary), transparent 76%);
}

.auth-form .username-wrap { overflow: hidden; max-height: 0; opacity: 0; transform: translateY(-6px); }
.auth-form .username-wrap.open { overflow: visible; max-height: 160px; opacity: 1; transform: translateY(0); }
.auth-form .username-wrap .help { margin-top: 4px; }

/* Subtle reveal for the username help only when the user focuses or starts
   typing in the username input. Uses :not(:placeholder-shown) to detect
   non-empty input in supporting browsers. */
.auth-form .username-wrap .help {
  opacity: 0;
  transform: translateY(6px);
  transition: opacity 260ms var(--transition-mid), transform 320ms var(--transition-mid);
  will-change: opacity, transform;
}

.auth-form .username-wrap input:focus ~ .help,
.auth-form .username-wrap input:not(:placeholder-shown) ~ .help {
  opacity: 1;
  transform: translateY(0);
}

/* For browsers without :placeholder-shown support, also reveal on focus-within */
.auth-form .username-wrap:focus-within .help { opacity: 1; transform: translateY(0); }

@media (prefers-reduced-motion: reduce) {
  .auth-form .username-wrap .help,
  .auth-form .username-wrap input:focus ~ .help,
  .auth-form .username-wrap input:not(:placeholder-shown) ~ .help,
  .auth-form .username-wrap:focus-within .help {
    transition: none !important;
    transform: none !important;
  }
}
.auth-form .username-wrap .validity-indicator { position: absolute; inset: 0; display: flex; align-items: center; justify-content: flex-end; padding-right: 10px; pointer-events: none; }
.auth-form .username-wrap .check { width: 22px; height: 22px; opacity: 0; transform: scale(.6) rotate(-12deg); transition: opacity 200ms var(--transition-fast), transform 260ms var(--transition-mid), color 260ms var(--transition-fast); color: var(--muted); }
.auth-form .username-wrap .check.pending { opacity: .5; transform: scale(.8); color: var(--danger); }
.auth-form .username-wrap .check.ok { opacity: 1; transform: scale(1) rotate(0); color: var(--accent); }

/* Toggle pill improvements */
.auth-toggle {
  --auth-toggle-transition: 260ms cubic-bezier(.2,.8,.2,1);
  position: relative;
  padding: 6px 8px;
  background: color-mix(in srgb, var(--bg-elev), transparent 12%);
  border-radius: 999px;
  border: 1px solid color-mix(in srgb, var(--border), transparent 40%);
  display: inline-flex;
  gap: 6px;
  align-items: center;
}

/* subtle sliding indicator behind the active pill
   - keep the visual weight low (no harsh white rings)
   - prefer transform-based movement where possible (smoother on most browsers)
   - JS may still set left/width; we ensure transitions are consistent */
.auth-toggle-indicator {
  position: absolute;
  left: 4px;
  top: 4px;
  height: calc(100% - 8px);
  width: calc(50% - 8px);
  border-radius: 999px;
  background: linear-gradient(180deg, color-mix(in srgb, var(--primary-weak), transparent 8%), color-mix(in srgb, var(--primary-weak), transparent 28%));
  box-shadow: 0 6px 18px rgba(0,0,0,0.06);
  transition: transform var(--auth-toggle-transition), left var(--auth-toggle-transition), width var(--auth-toggle-transition), background 180ms ease;
  z-index: 1;
  will-change: transform, left, width;
}

.auth-toggle .pill-switch {
  position: relative;
  z-index: 2; /* sit above the indicator */
  background: transparent;
  border: none;
  font-weight: 600;
  padding: 8px 16px;
  border-radius: 999px;
  color: var(--muted);
  cursor: pointer;
  transition: color 180ms var(--auth-toggle-transition), transform 180ms var(--auth-toggle-transition);
}

.auth-toggle .pill-switch:hover { transform: translateY(-1px); }
.auth-toggle .pill-switch:active { transform: translateY(0); }

.auth-toggle .pill-switch.active {
  color: var(--text);
  transform: translateY(-2px);
}

.auth-toggle .pill-switch:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--primary), transparent 70%);
}

/* Submit button animation */
.submit-btn {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  min-width: 160px;
  will-change: transform, box-shadow, background-color;
  transition: box-shadow 260ms var(--transition-mid), transform 220ms var(--transition-fast);
}
.submit-btn::after {
  /* gradient overlay used to smoothly animate into signup look */
  content: '';
  position: absolute; inset: 0; z-index: 0;
  border-radius: inherit;
  background: linear-gradient(90deg,#4da9ff,#6cc8ff);
  opacity: 0; pointer-events: none;
  transition: opacity 280ms cubic-bezier(.2,.85,.32,1);
}
.submit-btn .label-text { position: relative; z-index: 2; transition: opacity 220ms var(--transition-fast), transform 260ms var(--transition-mid); display: inline-block; }
.submit-btn svg { position: relative; z-index: 2; transition: transform 240ms var(--transition-mid), opacity 200ms var(--transition-fast); }