.header {
  position: fixed; top: 0; z-index: 10; left: 0; right: 0;
  /* Use the CSS variable as the header's own height so it participates
     in layout and prevents content from jumping under it. JS will
     measure and update this variable at runtime when available. */
  height: var(--header-height, calc(40px + var(--safe-top, 0px) + 8px + 8px));
  --header-height: var(--header-height, 40px);
  backdrop-filter: saturate(180%) blur(8px);
  background: color-mix(in srgb, var(--bg), transparent 10%);
  border-bottom: 1px solid var(--border);
  padding-top: calc(var(--safe-top) + 8px);
}
.header-inner {
  position: relative;
  max-width: var(--maxw); margin: 0 auto; padding: 8px var(--page-side-padding);
  display: flex; align-items: center; gap: 10px; justify-content: space-between;
  /* Ensure the header never expands beyond its container (prevents
     long inline labels from increasing the app width on small screens). */
  width: 100%;
  box-sizing: border-box;
}
.brand { display: flex; align-items: center; gap: 10px; cursor: pointer; }
.brand .logo {
  width: 28px; height: 28px; border-radius: 8px; background: var(--text); position: relative; overflow: hidden;
  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);
  background-image: url('/logo.svg');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}
.brand .logo {
  width: 28px; height: 28px; border-radius: 8px; background: transparent; position: relative; overflow: hidden;
  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);
  background-image: url('/logo.svg');
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}
:root[data-theme="dark"] .brand .logo {
  filter: invert(1);
}
.brand:hover .logo {
  transform: none;
}
.brand .logo.animate-bounce {
  animation: logo-bounce 400ms cubic-bezier(0.34, 1.56, 0.64, 1);
}
.brand h1 { font-size: 17px; font-weight: 700; margin: 0; letter-spacing: 0.2px; }

.header-actions { display: flex; align-items: center; gap: 4px; }
/* allow header action group to shrink when space is tight (prevents
  the header from growing wider than the viewport when account text
  is present). */
.header-actions { min-width: 0; }

/* Pin the action group to the right edge of the header (viewport).
   Position absolutely so it sits at the far right even when the
   centered .header-inner has a max-width. Vertically center it. */
.header-actions {
  position: absolute;
  /* align with the inner container's right padding (keeps alignment with
     other controls inside the inner grid like the grid switcher) */
  right: var(--page-side-padding);
  top: 50%;
  transform: translateY(-50%);
}

/* We render the account switcher avatar and name in DOM order (avatar then name)
   but visually keep the avatar at the far right by reversing the row for
   the account-switcher container. This lets the account label expand to the
   left and push other header items when revealed. */
/* Keep normal order for header actions so the action group order remains
  left-to-right. We only reverse the inner order of the account button so
  the avatar visually stays at the far right while the label expands left. */

/* Limit how much the account label can grow while allowing a smooth reveal. */
.account-switcher { display: inline-flex; align-items: center; flex: 0 0 auto; }
/* Reverse only the contents of the account switcher button: DOM keeps
  avatar first but visually avatar sits to the right. This prevents all
  header buttons from being reordered. */
.account-switcher .btn { display: inline-flex; align-items: center; gap: 8px; flex-direction: row-reverse; }
.account-switcher .btn .account-name {
  display: inline-block;
  max-width: 0; /* collapsed by default */
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  transition: max-width 220ms cubic-bezier(0.2, 0, 0, 1), opacity 180ms ease;
  opacity: 0;
  font-size: 13px;
  line-height: 20px;
}

/* On hover or focus of the account button, expand the account name to the left.
   Because .header-actions uses row-reverse, expanding the inline element increases
   the space to the left and effectively pushes the other header controls. */
.account-switcher .btn:hover .account-name,
.account-switcher .btn:focus .account-name {
  max-width: 160px; /* reasonable visible length */
  opacity: 1;
}

/* Reduce motion preference: use instant reveal without animation */
@media (prefers-reduced-motion: reduce) {
  .account-switcher .btn .account-name { transition: none; }
}

/* Normalize header action button heights so icon-only and text buttons match */
.header-actions .btn {
  height: 36px; /* match .btn.icon width/height for visual consistency */
  padding: 0 6px; /* vertical padding removed since height is fixed */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  /* Remove button effects for header */
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  transform: none !important;
  transition: none !important;
}
.header-actions .btn::before {
  display: none !important;
}
.header-actions .btn:hover,
.header-actions .btn:active,
.header-actions .btn:focus {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  transform: none !important;
  outline: none !important;
}
/* Keep existing square sizing for icon variant; remove extra horizontal padding */
.header-actions .btn.icon {
  padding: 0; /* .btn.icon already sets fixed size; zero padding ensures perfect circle */
}

/* Subtle active state for header icon buttons (About, Favorites). Uses --tab-color
   and keeps contrast low so it's not visually heavy. We style both by adding an
   inset underline and a faint tint so the icon appears selected when on that page. */
.header-actions .btn.icon.active {
  /* Slight background tint using color-mix for subtlety */
  background: color-mix(in srgb, var(--tab-color) 8%, transparent);
  border-radius: 10px;
  box-shadow: inset 0 -2px 0 0 color-mix(in srgb, var(--tab-color) 45%, transparent);
}

.header-actions .btn.icon.active svg {
  /* Tint the icon stroke slightly toward the tab color */
  stroke: color-mix(in srgb, var(--tab-color) 65%, currentColor);
}

/* Favorites button: override to a warm yellow when active */
.header-actions .favorites-btn.active {
  background: color-mix(in srgb, #f6e05e 18%, transparent); /* yellow-300 tint */
  box-shadow: inset 0 -2px 0 0 color-mix(in srgb, #f59e0b 50%, transparent); /* amber underline */
}
.header-actions .favorites-btn.active svg {
  stroke: color-mix(in srgb, #f59e0b 80%, currentColor); /* amber stroke */
}

/* Stronger override: some SVGs set stroke/fill via attributes or other styles.
   Use !important and target common attributes to ensure the star appears amber. */
.header-actions .favorites-btn.active svg,
.header-actions .favorites-btn.active svg * {
  stroke: #f59e0b !important;
  fill: none !important; /* keep it an outline icon unless a filled look is desired */
}

/* If the SVG is filled, tint the fill to a pale amber to match the active feel */
.header-actions .favorites-btn.active svg.filled,
.header-actions .favorites-btn.active svg.filled * {
  fill: color-mix(in srgb, #f59e0b 70%, currentColor) !important;
  stroke: #f59e0b !important;
}

/* Account switcher button: prevent long usernames from expanding the header.
   Keep avatar fixed size and clamp the label with ellipsis. */
.account-switcher .btn {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  min-width: 0; /* allow truncation */
  padding: 6px 6px; /* slightly smaller touch target for header */
}
.account-switcher .btn img.avatar {
  width: 22px; height: 22px; border-radius: 50%; flex: 0 0 auto; object-fit: cover;
}
.account-switcher .btn span {
  display: inline-block;
  max-width: 110px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@media (max-width: 320px) {
  .brand h1 {
    display: none;
  }
}