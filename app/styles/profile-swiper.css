/* Make Swiper slides full-bleed and responsive so they fill the content area
   and avoid rendering as a narrow centered column in small viewports. */
  .swipe-views {
    width: 100% !important;
    /* Restore fixed height for swiper functionality */
    height: calc(100vh - var(--header-height, calc(48px + var(--safe-top, 0px) + 12px + 8px))) !important;
    /* Ensure proper positioning */
    position: relative !important;
    /* Enable hardware acceleration for smoother animations */
    transform: translateZ(0);
  }
  .swipe-views .swiper-wrapper {
    width: 100% !important;
    height: 100% !important;
    /* Ensure proper positioning */
    position: relative !important;
    /* Hardware acceleration */
    transform: translateZ(0);
  }
/* Make each slide flexible: ensure slides fill the viewport minus header/tabbar
   but allow taller content to grow. Use min-height rather than forcing a
   fixed height to avoid clipping inner components. Also reserve bottom
   padding to protect content from the fixed tabbar. */

  /* Small internal bottom buffer so content doesn't sit flush against the tabbar */
  .swipe-views .swiper-slide > * {
     padding-bottom: calc(var(--tabbar-height, 72px) + 12px) !important;
  }

/* Uniform slide sizing handled via min-height above; no separate fixed-height
   rules are necessary for narrow screens. */

/* Break out of centered .content container so the Swiper can be full-bleed
   while preserving the normal layout for other pages. Targets the Swiper
   when it's a direct child of .content (our usage in AppShell). */
.content > .swipe-views {
  /* Use dynamic viewport units (dvw) to avoid horizontal shifts when
     the browser shows/hides scrollbars (e.g. after logging in). We center
     using a calc() that breaks out of the centered content container so
     the swiper truly matches the viewport rather than the centered content. */
  width: 100dvw !important;
  max-width: 100dvw !important;
  margin-left: calc(50% - 50dvw) !important; /* center full-bleed child */
  margin-right: calc(50% - 50dvw) !important;
  /* remove app padding from the full-bleed wrapper so slides can be
     exactly viewport width; slide content will receive padding instead */
  padding-left: 0 !important;
  padding-right: 0 !important;
  /* Restore overflow hidden for swiper functionality */
  overflow: hidden;
  box-sizing: border-box;
  position: relative;
  /* Restore fixed height */
  height: calc(100vh - var(--header-height, calc(48px + var(--safe-top, 0px) + 12px + 8px))) !important;
}

/* Ensure full-bleed swipe views account for the sticky header height.
   Some pages render slides that break out of the normal .content padding
   and may end up underneath the header. Apply a safe top padding using
   the CSS variable (with a fallback) so slide content is never obscured. */

/* Make each swiper slide exactly the viewport width and apply the app padding
   to slide content so visuals match the rest of the app while keeping the
   slide clipping correct. */
.swipe-views .swiper-slide {
  /* Make slides match the dynamic viewport width so they stay centered
     and don't produce a horizontal shift when the vertical scrollbar
     appears/disappears. */
  width: 100% !important;
  height: 100% !important;
  display: block !important;
  /* Ensure proper positioning */
  position: relative !important;
  overflow-y: auto;
  /* Hardware acceleration for smooth transitions */
  transform: translateZ(0);
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

/* Removed: autoHeight-specific rules no longer needed */

/* Reserve bottom spacing inside slides so content isn't covered by the
    fixed tabbar. Use the tabbar variable with a sensible fallback. */
/* slides rely on their computed height (which already accounts for the
    header and tabbar). Avoid forcing additional bottom padding here. */

/* DEBUG HELPERS (temporary) -------------------------------------------------
   These subtle outlines help identify which container is misaligned when
   you sign in. They'll be easy to spot in the devtools device emulation.
   Remove these rules after debugging. */
.debug-guides .content { outline: 1px dashed rgba(255,255,255,0.04); }
.debug-guides .content > .swipe-views { outline: 1px dashed rgba(0,128,255,0.06); }
.debug-guides .header-inner { outline: 1px dashed rgba(0,200,255,0.05); }
.debug-guides .tabbar-inner { outline: 1px dashed rgba(0,255,128,0.04); }
/* Apply by adding class "debug-guides" to the <body> element in the console:
   document.body.classList.add('debug-guides')
 */

/* If content within a slide needs to center vertically, pages/components
   can use .slide-center to opt-in to vertical centering without affecting
   general layout. */
.slide-center { display: grid; place-items: start center; }