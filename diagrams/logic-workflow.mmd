%% Mermaid workflow diagram for MonoLog app
%% Render with mermaid live editor or VS Code Mermaid preview
flowchart LR
  subgraph RootLayout[Root Layout]
    direction TB
    Header(Header)
    AppPreloader(AppPreloader)
    ToastProvider(ToastProvider)
    AppShell(AppShell)
    Navbar(Navbar)
  end

  subgraph AppShellChildren[AppShell / Main View]
    direction LR
    Feed["FeedView (/ or /feed)"]
    Explore["ExploreView (/explore)"]
    Upload["Uploader (/upload)"]
    Calendar["CalendarView (/calendar)"]
    Profile["ProfileView (/profile or /:username)"]
  end

  RootLayout --> AppShell
  AppShell --> AppShellChildren
  AppShellChildren --> Feed
  AppShellChildren --> Explore
  AppShellChildren --> Upload
  AppShellChildren --> Calendar
  AppShellChildren --> Profile

  Header -->|global UI| AppShell
  Navbar -->|navigation| AppShell

  %% Key components used inside views
  Feed --> PostCard[PostCard]
  Feed --> PostView[PostView]
  Profile --> PostsList["PostsList/PostsGrid"]
  Upload --> ImageEditor[ImageEditor]
  Upload --> UploaderState["Uploader state/hooks"]

  %% API interactions (server routes under /app/api)
  Feed -->|GET/POST| API_Posts["/api/posts/*"]
  PostCard -->|favorite/update/delete| API_Posts
  PostCard -->|comments| API_Comments["/api/comments/*"]
  Profile -->|user data| API_Users["/api/users/*"]
  Upload -->|upload file| API_Storage["/api/storage/upload"]
  Communities["Communities & Threads"] -.-> API_Communities["/api/communities/*"]
  Threads["Thread detail"] -.-> API_Threads["/api/threads/*"]

  %% Notifications & service features
  AppShell --> NotificationListener
  RootLayout --> PWAAnalytics[PWAAnalytics]

  %% Notes
  classDef api fill:#f9f,stroke:#333,stroke-width:1px
  class API_Posts,API_Comments,API_Users,API_Storage,API_Communities,API_Threads api
