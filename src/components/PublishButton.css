/* PublishButton.css - Standalone publish button with countdown */

/* Shared custom properties so both Publish and Cancel buttons can reference height */
:root {
  --publish-two-line-height: 48px;
  /* widened slightly to avoid content-driven jumps between timer and two-line messages */
  --publish-button-min-width: 240px;
}

.publish-button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: var(--publish-button-min-width);
  height: var(--publish-two-line-height);
  min-height: var(--publish-two-line-height);
  padding: 7px 16px; /* slightly reduced padding to match shorter height */
  border: none;
  border-radius: 999px; /* pill */
  font-size: 14px;
  /* softer weight for calmer UI */
  font-weight: 400;
  cursor: pointer;
  transition: background var(--transition-fast), color var(--transition-fast), box-shadow var(--transition-fast), transform var(--transition-fast);
  /* smooth any width changes (keeps UI from jumping) */
  transition: background var(--transition-fast), color var(--transition-fast), box-shadow var(--transition-fast), transform var(--transition-fast), width 180ms ease;
  overflow: hidden;
  background: var(--primary-weak); /* pastel base (cooldown style) */
  color: var(--text);
  /* remove persistent halo/shadow to match Cancel button vibe */
  box-shadow: none;
  line-height: 1; /* tighter vertical rhythm */
}

.publish-button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.publish-button:not(:disabled):hover {
  transform: translateY(-2px);
  /* subtle hover shadow to hint interactiveness */
  /* removed hover shadow */
  box-shadow: none;
}

.publish-button:not(:disabled):active {
  transform: translateY(0);
}

/* Ready state - can publish */
.publish-button.ready {
  background: var(--primary);
  color: #fff;
}

/* subtler pulse */
.publish-button.ready.pulse {
  /* pulse animation disabled to avoid glow/halo */
  animation: none;
}

@keyframes ready-pulse {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 3px 10px color-mix(in srgb, var(--primary), transparent 80%);
  }
  50% {
    transform: scale(1.01);
    box-shadow: 0 5px 16px color-mix(in srgb, var(--primary), transparent 60%);
  }
}

/* Cooldown state */
.publish-button.cooldown {
  background: color-mix(in srgb, var(--primary-weak), var(--primary) 22%); /* slightly richer than weak */
  color: var(--text);
  cursor: default;
}

.publish-button.cooldown:hover {
  transform: none; /* no lift when inactive */
  /* no shadow while cooling down */
  box-shadow: none;
}

/* Cooldown shrinking bar (remaining portion) */
.cooldown-bar { position:absolute; inset:0; border-radius:inherit; overflow:hidden; background: color-mix(in srgb, var(--primary-weak), transparent 60%); }
.cooldown-bar .fill { position:absolute; top:0; bottom:0; left:0; background: linear-gradient(90deg, color-mix(in srgb, var(--primary), #fff 20%), var(--primary)); opacity:.18; backdrop-filter: blur(1px) brightness(1.05); transition: width 1s linear; }
.publish-button.flash .cooldown-bar .fill { animation: flashBar 900ms ease; }
@keyframes flashBar { 0% { filter: brightness(1.8); opacity:.55; } 40% { filter: brightness(1.1); opacity:.22; } 100% { filter: brightness(1); opacity:.18; } }

/* Flash digits when clicking during cooldown */
.publish-button.flash .countdown-time { animation: none; /* disable glowing text during flash */ }
@keyframes flashDigits { 0% { transform: scale(1.08); text-shadow:0 0 12px color-mix(in srgb, var(--primary), #fff 40%); } 50% { transform: scale(1); } 100% { text-shadow: 0 1px 3px rgba(0,0,0,.25); } }

/* Content container */
.publish-content {
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  /* Allow content to wrap (two lines max) while keeping button height fixed */
  flex-wrap: wrap;
  text-align: center;
  white-space: normal;
}

/* Ready text with icon */
.publish-text {
  display: flex;
  align-items: center;
  gap: 8px;
  /* softer weight for icon + label */
  font-weight: 400;
  letter-spacing: 0.35px;
}

.ready-text {
  /* disable glowing text effect */
  animation: none;
  text-shadow: none;
}

@keyframes ready-text-glow {
  0%, 100% {
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.3);
  }
  50% {
    text-shadow: 0 0 16px rgba(255, 255, 255, 0.6);
  }
}

.icon-publish {
  width: 18px;
  height: 18px;
  animation: icon-float 3s ease-in-out infinite;
}

@keyframes icon-float { 0%,100%{ transform: translateY(0);} 50%{ transform: translateY(-1.5px);} }

/* Spinner for processing state */
.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top-color: white;
  border-radius: 50%;
  display: inline-block;
  animation: spin 0.8s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Countdown display */
.countdown-display {
  position: relative;
  display: flex;
  align-items: center;
  font-variant-numeric: tabular-nums;
  letter-spacing: .5px;
  /* reserve space so content swaps don't jump */
  min-width: 9ch;
}

.countdown-time,
.wait-message {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) translateY(6px);
  opacity: 0;
  transition: opacity 260ms cubic-bezier(.2,.9,.2,1), transform 260ms cubic-bezier(.2,.9,.2,1);
  white-space: nowrap;
}

.countdown-time.visible,
.wait-message.visible {
  transform: translate(-50%, -50%) translateY(0);
  opacity: 1;
}

.countdown-time { font-size: 16px; /* slightly reduced weight for subtler look */ font-weight: 600; text-shadow: none; }

/* Inline wait message (rotating). Constrain to two lines and center.) */
.wait-message {
  font-size: 15px;
  /* slightly lighter so the ephemeral hint reads friendly */
  font-weight: 500;
  line-height: 1.05;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 20ch;
}

/* removed show-message state */

/* removed segmented time styles */

/* removed cooldown text message styles */

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .publish-button.ready.pulse,
  .ready-text,
  .icon-publish,
  .spinner {
    animation: none !important;
  }
  
  .publish-button {
    transition: none;
  }
  
  .publish-button.show-message .cooldown-message {
    animation: none;
  }
}

/* Mobile responsive */
@media (max-width: 640px) {
  :root { --publish-two-line-height: 44px; }
  :root { --publish-button-min-width: 160px; }
  .publish-button {
    /* slightly smaller on mobile but still fits two lines */
    padding: 6px 14px;
    font-size: 13.5px;
  }
  .wait-message { max-width: 20ch; }
  .cooldown-message { font-size: 13px; padding: 0 24px; }
  .time-value { font-size: 15px; }
}

/* When form controls are stacked (mobile), make publish & cancel buttons full width */
@media (max-width: 640px) {
  .publish-button,
  .btn.cancel-btn {
    min-width: 0; /* allow flexed width */
    width: 100%;
  }
}

/* Make the Cancel button match the publish button's size and pill shape */
.btn.cancel-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: var(--publish-button-min-width);
  height: var(--publish-two-line-height);
  min-height: var(--publish-two-line-height);
  padding: 7px 16px; /* match publish button */
  border-radius: 999px;
  font-weight: 400;
  font-size: 14px;
  line-height: 1;
}

/* Fallback small hint shown under the publish button when on cooldown */
.publish-hint {
  font-size: 13px;
  color: var(--muted);
}

@media (max-width: 640px) {
  .btn.cancel-btn {
    padding: 6px 14px; /* match publish button mobile padding */
    font-size: 13.5px;
  }
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  .publish-button {
    box-shadow: none;
  }
  
  .publish-button:not(:disabled):hover {
    box-shadow: none;
  }
}
